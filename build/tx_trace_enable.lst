ARM GAS  /tmp/ccfPJEyo.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tx_trace_enable.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Middlewares/ST/threadx/common/src/tx_trace_enable.c"
  19              		.section	.text._tx_trace_enable,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_trace_enable
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_trace_enable:
  27              	.LVL0:
  28              	.LFB8:
   1:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**************************************************************************/
   2:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
   3:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
   5:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  10:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**************************************************************************/
  11:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  12:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  13:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**************************************************************************/
  14:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**************************************************************************/
  15:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**                                                                       */
  16:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**                                                                       */
  18:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**   Trace                                                               */
  19:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**                                                                       */
  20:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**************************************************************************/
  21:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**************************************************************************/
  22:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  23:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #define TX_SOURCE_CODE
  24:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  25:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  26:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /* Include necessary system files.  */
  27:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  28:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_api.h"
  29:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #ifdef TX_ENABLE_EVENT_TRACE
  30:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_thread.h"
ARM GAS  /tmp/ccfPJEyo.s 			page 2


  31:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_timer.h"
  32:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_event_flags.h"
  33:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_queue.h"
  34:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_semaphore.h"
  35:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_mutex.h"
  36:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_block_pool.h"
  37:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_byte_pool.h"
  38:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #endif
  39:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #include "tx_trace.h"
  40:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  41:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  42:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**************************************************************************/
  43:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  44:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  FUNCTION                                               RELEASE        */
  45:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  46:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    _tx_trace_enable                                    PORTABLE C      */
  47:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                           6.1          */
  48:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  AUTHOR                                                                */
  49:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  50:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    William E. Lamie, Microsoft Corporation                             */
  51:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  52:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  DESCRIPTION                                                           */
  53:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  54:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    This function initializes the ThreadX trace buffer and the          */
  55:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    associated control variables, enabling it for operation.            */
  56:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  57:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  INPUT                                                                 */
  58:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  59:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    trace_buffer_start                    Start of trace buffer         */
  60:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    trace_buffer_size                     Size (bytes) of trace buffer  */
  61:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    registry_entries                      Number of object registry     */
  62:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                            entries.                    */
  63:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  64:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  OUTPUT                                                                */
  65:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  66:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    Completion Status                                                   */
  67:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  68:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  CALLS                                                                 */
  69:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  70:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    _tx_thread_system_preempt_check       Check for preemption          */
  71:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    _tx_trace_object_register             Register existing objects     */
  72:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  73:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  CALLED BY                                                             */
  74:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  75:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    Application Code                                                    */
  76:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  77:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  RELEASE HISTORY                                                       */
  78:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  79:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*    DATE              NAME                      DESCRIPTION             */
  80:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  81:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  82:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  83:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                            resulting in version 6.1    */
  84:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /*                                                                        */
  85:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** /**************************************************************************/
  86:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** UINT  _tx_trace_enable(VOID *trace_buffer_start, ULONG trace_buffer_size, ULONG registry_entries)
  87:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** {
ARM GAS  /tmp/ccfPJEyo.s 			page 3


  29              		.loc 1 87 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  88:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  89:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #ifdef TX_ENABLE_EVENT_TRACE
  90:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  91:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_INTERRUPT_SAVE_AREA
  92:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
  93:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_THREAD                       *thread_ptr;
  94:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_TIMER                        *timer_ptr;
  95:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_EVENT_FLAGS_GROUP            *event_flags_ptr;
  96:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_QUEUE                        *queue_ptr;
  97:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_SEMAPHORE                    *semaphore_ptr;
  98:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_MUTEX                        *mutex_ptr;
  99:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_BLOCK_POOL                   *block_pool_ptr;
 100:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_BYTE_POOL                    *byte_pool_ptr;
 101:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** UCHAR                           *work_ptr;
 102:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** UCHAR                           *event_start_ptr;
 103:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_TRACE_OBJECT_ENTRY           *entry_ptr;
 104:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** TX_TRACE_BUFFER_ENTRY           *event_ptr;
 105:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** ULONG                           i;
 106:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** UINT                            status;
 107:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 108:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 109:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     /* First, see if there is enough room for the control header, the registry entries, and at leas
 110:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****        memory supplied to this call.  */
 111:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     if (trace_buffer_size < ((sizeof(TX_TRACE_HEADER)) + ((sizeof(TX_TRACE_OBJECT_ENTRY)) * registr
 112:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     {
 113:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 114:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* No, the memory isn't big enough to hold one trace buffer entry.  Return an error.  */
 115:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         status =  TX_SIZE_ERROR;
 116:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     }
 117:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 118:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     /* Determine if trace is already enabled.  */
 119:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     else if (_tx_trace_buffer_current_ptr != TX_NULL)
 120:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     {
 121:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 122:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Yes, trace is already enabled.  */
 123:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         status =  TX_NOT_DONE;
 124:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     }
 125:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     else
 126:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     {
 127:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 128:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Set the enable bits for all events enabled.  */
 129:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_event_enable_bits =  0xFFFFFFFFUL;
 130:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 131:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Setup working pointer to the supplied memory.  */
 132:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         work_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(trace_buffer_start);
 133:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 134:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Setup pointer to the trace control area.  */
 135:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr =  TX_UCHAR_TO_HEADER_POINTER_CONVERT(work_ptr);
 136:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 137:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Move the working pointer past the control area.  */
 138:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         work_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(TX_TRACE_HEADER)));
 139:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
ARM GAS  /tmp/ccfPJEyo.s 			page 4


 140:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Save the start of the trace object registry.  */
 141:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_registry_start_ptr =  TX_UCHAR_TO_OBJECT_POINTER_CONVERT(work_ptr);
 142:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 143:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Setup the end of the trace object registry.  */
 144:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         work_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(TX_TRACE_OBJECT_ENTRY))*registry_entries
 145:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_registry_end_ptr =  TX_UCHAR_TO_OBJECT_POINTER_CONVERT(work_ptr);
 146:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 147:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to make all trace object registry entries empty and valid.  */
 148:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         for (i = ((ULONG) 0); i < registry_entries; i++)
 149:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 150:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 151:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Setup the work pointer.  */
 152:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             work_ptr =  TX_OBJECT_TO_UCHAR_POINTER_CONVERT(_tx_trace_registry_start_ptr);
 153:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             work_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, (sizeof(TX_TRACE_OBJECT_ENTRY))*i);
 154:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 155:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Convert to a registry entry pointer.  */
 156:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             entry_ptr =  TX_UCHAR_TO_OBJECT_POINTER_CONVERT(work_ptr);
 157:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 158:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Initialize object registry entry.  */
 159:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             entry_ptr -> tx_trace_object_entry_available =         (UCHAR) TX_TRUE;
 160:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             entry_ptr -> tx_trace_object_entry_type =              (UCHAR) TX_TRACE_OBJECT_TYPE_NOT
 161:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             entry_ptr -> tx_trace_object_entry_reserved1 =         (UCHAR) 0;
 162:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             entry_ptr -> tx_trace_object_entry_reserved2 =         (UCHAR) 0;
 163:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             entry_ptr -> tx_trace_object_entry_thread_pointer =    (ULONG) 0;
 164:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 165:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 166:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Setup the total number of registry entries.  */
 167:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_total_registry_entries =  registry_entries;
 168:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 169:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Setup the object registry available count to the total number of registry entries.  */
 170:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_available_registry_entries =  registry_entries;
 171:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 172:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Setup the search starting index to the first entry.  */
 173:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_registry_search_start =  ((ULONG) 0);
 174:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 175:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Setup the work pointer to after the trace object registry.  */
 176:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         work_ptr =  TX_OBJECT_TO_UCHAR_POINTER_CONVERT(_tx_trace_registry_end_ptr);
 177:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 178:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Adjust the remaining trace buffer size.  */
 179:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         trace_buffer_size =  trace_buffer_size - ((sizeof(TX_TRACE_OBJECT_ENTRY)) * registry_entrie
 180:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 181:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Setup pointer to the start of the actual event trace log.  */
 182:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_buffer_start_ptr =      TX_UCHAR_TO_ENTRY_POINTER_CONVERT(work_ptr);
 183:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 184:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Save the event trace log start address.  */
 185:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         event_start_ptr =  work_ptr;
 186:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 187:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Calculate the end of the trace buffer.  */
 188:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         work_ptr =  TX_UCHAR_POINTER_ADD(work_ptr, ((trace_buffer_size/(sizeof(TX_TRACE_BUFFER_ENTR
 189:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_buffer_end_ptr =        TX_UCHAR_TO_ENTRY_POINTER_CONVERT(work_ptr);
 190:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 191:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to mark all entries in the trace buffer as invalid.  */
 192:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         for (i = ((ULONG) 0); i < (trace_buffer_size/(sizeof(TX_TRACE_BUFFER_ENTRY))); i++)
 193:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 194:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 195:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Setup the work pointer.  */
 196:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             work_ptr =  TX_UCHAR_POINTER_ADD(event_start_ptr, (sizeof(TX_TRACE_BUFFER_ENTRY))*i);
ARM GAS  /tmp/ccfPJEyo.s 			page 5


 197:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 198:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Convert to a trace event pointer.  */
 199:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             event_ptr =  TX_UCHAR_TO_ENTRY_POINTER_CONVERT(work_ptr);
 200:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 201:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Mark this trace event as invalid.  */
 202:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             event_ptr -> tx_trace_buffer_entry_thread_pointer =  ((ULONG) 0);
 203:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 204:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 205:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Now, fill in the event trace control header.  */
 206:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_id =                             TX_TRACE_VALID;
 207:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_timer_valid_mask =               TX_TRACE_TIME_MASK
 208:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_trace_base_address =             TX_POINTER_TO_ULON
 209:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_registry_start_pointer =         TX_POINTER_TO_ULON
 210:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_reserved1 =                      ((USHORT) 0);
 211:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_object_name_size =               ((USHORT) TX_TRACE
 212:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_registry_end_pointer =           TX_POINTER_TO_ULON
 213:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_buffer_start_pointer =           TX_POINTER_TO_ULON
 214:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_buffer_end_pointer =             TX_POINTER_TO_ULON
 215:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_buffer_current_pointer =         TX_POINTER_TO_ULON
 216:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_reserved2 =                      0xAAAAAAAAUL;
 217:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_reserved3 =                      0xBBBBBBBBUL;
 218:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_header_ptr -> tx_trace_header_reserved4 =                      0xCCCCCCCCUL;
 219:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 220:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Now, loop through all existing ThreadX objects and register them in the newly setup trac
 221:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 222:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Disable interrupts.  */
 223:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         TX_DISABLE
 224:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 225:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* First, disable preemption.  */
 226:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_thread_preempt_disable++;
 227:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 228:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Restore interrupts.  */
 229:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         TX_RESTORE
 230:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 231:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Pickup the first thread and the number of created threads.  */
 232:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         thread_ptr =  _tx_thread_created_ptr;
 233:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         i =           _tx_thread_created_count;
 234:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 235:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to register all threads.  */
 236:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         while (i != ((ULONG) 0))
 237:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 238:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 239:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Decrement the counter.  */
 240:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             i--;
 241:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 242:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Register this thread.  */
 243:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             _tx_trace_object_register(TX_TRACE_OBJECT_TYPE_THREAD, thread_ptr, thread_ptr -> tx_thr
 244:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****                                         TX_POINTER_TO_ULONG_CONVERT(thread_ptr -> tx_thread_stack_s
 245:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 246:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Move to the next thread.  */
 247:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             thread_ptr =  thread_ptr -> tx_thread_created_next;
 248:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 249:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 250:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Pickup the first timer and the number of created timers.  */
 251:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         timer_ptr =  _tx_timer_created_ptr;
 252:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         i =          _tx_timer_created_count;
 253:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
ARM GAS  /tmp/ccfPJEyo.s 			page 6


 254:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to register all timers.  */
 255:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         while (i != ((ULONG) 0))
 256:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 257:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 258:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Decrement the counter.  */
 259:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             i--;
 260:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 261:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Register this timer.  */
 262:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             _tx_trace_object_register(TX_TRACE_OBJECT_TYPE_TIMER, timer_ptr, timer_ptr -> tx_timer_
 263:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****                                                        ((ULONG) 0), timer_ptr -> tx_timer_internal.
 264:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 265:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Move to the next timer.  */
 266:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             timer_ptr =  timer_ptr -> tx_timer_created_next;
 267:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 268:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 269:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 270:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Pickup the first event flag group and the number of created groups.  */
 271:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         event_flags_ptr =  _tx_event_flags_created_ptr;
 272:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         i =                _tx_event_flags_created_count;
 273:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 274:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to register all event flags groups.  */
 275:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         while (i != ((ULONG) 0))
 276:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 277:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 278:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Decrement the counter.  */
 279:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             i--;
 280:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 281:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Register this event flags group.  */
 282:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             _tx_trace_object_register(TX_TRACE_OBJECT_TYPE_EVENT_FLAGS, event_flags_ptr, event_flag
 283:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 284:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Move to the next event flags group.  */
 285:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             event_flags_ptr =  event_flags_ptr -> tx_event_flags_group_created_next;
 286:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 287:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 288:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Pickup the first queue and the number of created queues.  */
 289:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         queue_ptr =  _tx_queue_created_ptr;
 290:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         i =          _tx_queue_created_count;
 291:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 292:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to register all queues.  */
 293:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         while (i != ((ULONG) 0))
 294:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 295:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 296:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Decrement the counter.  */
 297:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             i--;
 298:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 299:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Register this queue.  */
 300:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             _tx_trace_object_register(TX_TRACE_OBJECT_TYPE_QUEUE, queue_ptr, queue_ptr -> tx_queue_
 301:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****                                                                     (queue_ptr -> tx_queue_capacity
 302:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 303:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Move to the next queue.  */
 304:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             queue_ptr =  queue_ptr -> tx_queue_created_next;
 305:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 306:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 307:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Pickup the first semaphore and the number of created semaphores.  */
 308:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         semaphore_ptr =  _tx_semaphore_created_ptr;
 309:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         i =              _tx_semaphore_created_count;
 310:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
ARM GAS  /tmp/ccfPJEyo.s 			page 7


 311:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to register all semaphores.  */
 312:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         while (i != ((ULONG) 0))
 313:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 314:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 315:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Decrement the counter.  */
 316:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             i--;
 317:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 318:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Register this semaphore.  */
 319:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             _tx_trace_object_register(TX_TRACE_OBJECT_TYPE_SEMAPHORE, semaphore_ptr, semaphore_ptr 
 320:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 321:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Move to the next semaphore.  */
 322:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             semaphore_ptr =  semaphore_ptr -> tx_semaphore_created_next;
 323:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 324:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 325:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Pickup the first mutex and the number of created mutexes.  */
 326:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         mutex_ptr =  _tx_mutex_created_ptr;
 327:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         i =          _tx_mutex_created_count;
 328:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 329:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to register all mutexes.  */
 330:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         while (i != ((ULONG) 0))
 331:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 332:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 333:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Decrement the counter.  */
 334:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             i--;
 335:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 336:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Register this mutex.  */
 337:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             _tx_trace_object_register(TX_TRACE_OBJECT_TYPE_MUTEX, mutex_ptr, mutex_ptr -> tx_mutex_
 338:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****                                                                         (ULONG) mutex_ptr -> tx_mut
 339:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 340:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Move to the next mutex.  */
 341:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             mutex_ptr =  mutex_ptr -> tx_mutex_created_next;
 342:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 343:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 344:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Pickup the first block pool and the number of created block pools.  */
 345:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         block_pool_ptr =  _tx_block_pool_created_ptr;
 346:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         i =               _tx_block_pool_created_count;
 347:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 348:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to register all block pools.  */
 349:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         while (i != ((ULONG) 0))
 350:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 351:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 352:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****              /* Decrement the counter.  */
 353:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             i--;
 354:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 355:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Register this block pool.  */
 356:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             _tx_trace_object_register(TX_TRACE_OBJECT_TYPE_BLOCK_POOL, block_pool_ptr, block_pool_p
 357:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****                                                                             block_pool_ptr -> tx_bl
 358:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 359:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Move to the next block pool.  */
 360:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             block_pool_ptr =  block_pool_ptr -> tx_block_pool_created_next;
 361:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 362:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 363:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Pickup the first byte pool and the number of created byte pools.  */
 364:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         byte_pool_ptr =  _tx_byte_pool_created_ptr;
 365:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         i =              _tx_byte_pool_created_count;
 366:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 367:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Loop to register all byte pools.  */
ARM GAS  /tmp/ccfPJEyo.s 			page 8


 368:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         while (i != ((ULONG) 0))
 369:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         {
 370:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 371:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Decrement the counter.  */
 372:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             i--;
 373:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 374:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Register this byte pool.  */
 375:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             _tx_trace_object_register(TX_TRACE_OBJECT_TYPE_BYTE_POOL, byte_pool_ptr, byte_pool_ptr 
 376:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****                                                                             byte_pool_ptr -> tx_byt
 377:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 378:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             /* Move to the next byte pool.  */
 379:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****             byte_pool_ptr =  byte_pool_ptr -> tx_byte_pool_created_next;
 380:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         }
 381:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 382:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Disable interrupts.  */
 383:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         TX_DISABLE
 384:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 385:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Release the preeemption.  */
 386:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_thread_preempt_disable--;
 387:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 388:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Finally, setup the current buffer pointer, which effectively enables the trace!  */
 389:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_trace_buffer_current_ptr =    (TX_TRACE_BUFFER_ENTRY *) _tx_trace_buffer_start_ptr;
 390:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 391:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Insert two RUNNING events so the buffer is not empty.  */
 392:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         TX_TRACE_IN_LINE_INSERT(TX_TRACE_RUNNING, 0, 0, 0, 0, TX_TRACE_INTERNAL_EVENTS)
 393:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         TX_TRACE_IN_LINE_INSERT(TX_TRACE_RUNNING, 0, 0, 0, 0, TX_TRACE_INTERNAL_EVENTS)
 394:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 395:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Restore interrupts.  */
 396:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         TX_RESTORE
 397:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 398:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Check for preemption.  */
 399:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         _tx_thread_system_preempt_check();
 400:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 401:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Return successful completion.  */
 402:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         status =  TX_SUCCESS;
 403:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     }
 404:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 405:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     /* Return completion status.  */
 406:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     return(status);
 407:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #else
 408:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 409:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** UINT        status;
  34              		.loc 1 409 1 view .LVU1
 410:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 411:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 412:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     /* Access input arguments just for the sake of lint, MISRA, etc.  */
 413:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     if (trace_buffer_start != TX_NULL)
  35              		.loc 1 413 5 view .LVU2
 414:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     {
 415:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 416:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Trace not enabled, return an error.  */
 417:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         status =  TX_FEATURE_NOT_ENABLED;
 418:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     }
 419:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     else if (trace_buffer_size == ((ULONG) 0))
  36              		.loc 1 419 10 view .LVU3
 420:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     {
 421:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
ARM GAS  /tmp/ccfPJEyo.s 			page 9


 422:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Trace not enabled, return an error.  */
 423:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         status =  TX_FEATURE_NOT_ENABLED;
 424:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     }
 425:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     else if (registry_entries == ((ULONG) 0))
  37              		.loc 1 425 10 view .LVU4
 426:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     {
 427:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 428:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Trace not enabled, return an error.  */
 429:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         status =  TX_FEATURE_NOT_ENABLED;
 430:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     }
 431:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     else
 432:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     {
 433:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 434:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         /* Trace not enabled, return an error.  */
 435:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****         status =  TX_FEATURE_NOT_ENABLED;
  38              		.loc 1 435 9 view .LVU5
 436:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     }
 437:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** 
 438:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     /* Return completion status.  */
 439:Middlewares/ST/threadx/common/src/tx_trace_enable.c ****     return(status);
  39              		.loc 1 439 5 view .LVU6
 440:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** #endif
 441:Middlewares/ST/threadx/common/src/tx_trace_enable.c **** }
  40              		.loc 1 441 1 is_stmt 0 view .LVU7
  41 0000 FF20     		movs	r0, #255
  42              	.LVL1:
  43              		.loc 1 441 1 view .LVU8
  44 0002 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE8:
  48              		.text
  49              	.Letext0:
  50              		.file 2 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h"
ARM GAS  /tmp/ccfPJEyo.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 tx_trace_enable.c
     /tmp/ccfPJEyo.s:20     .text._tx_trace_enable:00000000 $t
     /tmp/ccfPJEyo.s:26     .text._tx_trace_enable:00000000 _tx_trace_enable

NO UNDEFINED SYMBOLS
