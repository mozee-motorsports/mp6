ARM GAS  /tmp/ccizixV4.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tx_queue_prioritize.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Middlewares/ST/threadx/common/src/tx_queue_prioritize.c"
  19              		.section	.text._tx_queue_prioritize,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_queue_prioritize
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_queue_prioritize:
  27              	.LVL0:
  28              	.LFB8:
   1:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**************************************************************************/
   2:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
   3:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
   5:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  10:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**************************************************************************/
  11:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  12:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  13:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**************************************************************************/
  14:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**************************************************************************/
  15:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**                                                                       */
  16:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**                                                                       */
  18:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**   Queue                                                               */
  19:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**                                                                       */
  20:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**************************************************************************/
  21:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**************************************************************************/
  22:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  23:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** #define TX_SOURCE_CODE
  24:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  25:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  26:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /* Include necessary system files.  */
  27:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  28:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** #include "tx_api.h"
  29:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** #include "tx_trace.h"
  30:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** #include "tx_thread.h"
ARM GAS  /tmp/ccizixV4.s 			page 2


  31:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** #include "tx_queue.h"
  32:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  33:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  34:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**************************************************************************/
  35:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  36:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  FUNCTION                                               RELEASE        */
  37:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  38:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    _tx_queue_prioritize                                PORTABLE C      */
  39:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                           6.1          */
  40:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  AUTHOR                                                                */
  41:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  42:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  44:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  DESCRIPTION                                                           */
  45:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  46:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    This function places the highest priority suspended thread at the   */
  47:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    front of the suspension list.  All other threads remain in the same */
  48:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    FIFO suspension order.                                              */
  49:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  50:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  INPUT                                                                 */
  51:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  52:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    queue_ptr                         Pointer to queue control block    */
  53:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  54:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  OUTPUT                                                                */
  55:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  56:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    status                            Completion status                 */
  57:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  58:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  CALLS                                                                 */
  59:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  60:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    _tx_thread_system_preempt_check   Check for preemption              */
  61:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  62:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  CALLED BY                                                             */
  63:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  64:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    Application Code                                                    */
  65:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  66:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  RELEASE HISTORY                                                       */
  67:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  68:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*    DATE              NAME                      DESCRIPTION             */
  69:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  70:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  71:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  72:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                            resulting in version 6.1    */
  73:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /*                                                                        */
  74:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** /**************************************************************************/
  75:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** UINT  _tx_queue_prioritize(TX_QUEUE *queue_ptr)
  76:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 76 1 is_stmt 0 view .LVU1
  34 0000 70B5     		push	{r4, r5, r6, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 4, -16
  38              		.cfi_offset 5, -12
  39              		.cfi_offset 6, -8
ARM GAS  /tmp/ccizixV4.s 			page 3


  40              		.cfi_offset 14, -4
  77:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  78:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** TX_INTERRUPT_SAVE_AREA
  41              		.loc 1 78 1 is_stmt 1 view .LVU2
  79:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  80:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** TX_THREAD       *thread_ptr;
  42              		.loc 1 80 1 view .LVU3
  81:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** TX_THREAD       *priority_thread_ptr;
  43              		.loc 1 81 1 view .LVU4
  82:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** TX_THREAD       *head_ptr;
  44              		.loc 1 82 1 view .LVU5
  83:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** UINT            suspended_count;
  45              		.loc 1 83 1 view .LVU6
  84:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** TX_THREAD       *next_thread;
  46              		.loc 1 84 1 view .LVU7
  85:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** TX_THREAD       *previous_thread;
  47              		.loc 1 85 1 view .LVU8
  86:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** UINT            list_changed;
  48              		.loc 1 86 1 view .LVU9
  87:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  88:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  89:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     /* Disable interrupts to place message in the queue.  */
  90:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     TX_DISABLE
  49              		.loc 1 90 5 view .LVU10
  50              	.LBB20:
  51              	.LBI20:
  52              		.file 2 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h"
   1:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
   2:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
   3:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
   5:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  10:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  11:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  12:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  13:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  14:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  15:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  16:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  18:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  20:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  21:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  22:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  23:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  24:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  25:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  26:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  28:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M7/GNU     */
  29:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                           6.1.12       */
  30:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
ARM GAS  /tmp/ccizixV4.s 			page 4


  31:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  33:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  35:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  37:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  46:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  49:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  51:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  53:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  04-25-2022      Scott Larson            Modified comments and added   */
  60:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            volatile to registers,      */
  61:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.11 */
  62:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  07-29-2022      Scott Larson            Modified comments and         */
  63:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            described BASEPRI usage,    */
  64:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.12 */
  65:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  66:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  67:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  68:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  69:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_H
  70:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  71:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  72:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  73:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  74:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  75:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  76:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  77:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  78:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  79:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include "tx_user.h"
  80:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  81:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  82:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  83:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  84:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  85:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <stdlib.h>
  86:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <string.h>
  87:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/ccizixV4.s 			page 5


  88:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  89:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  90:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  91:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  92:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <yvals.h>
  93:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  94:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  95:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  96:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ghs__
  97:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  98:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  99:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 100:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 101:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 102:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
 103:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
 104:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
 105:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 106:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 107:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef __GNUC__
 108:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 109:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 110:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 111:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 112:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 113:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define VOID                                    void
 114:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 115:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 116:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef int                                     INT;
 117:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 118:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef long                                    LONG;
 119:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 120:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 121:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 122:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 123:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 124:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 125:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 126:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 127:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 128:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
 129:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 130:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 131:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 132:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 133:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 134:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 135:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 136:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 137:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 138:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 139:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 140:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 141:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 142:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 143:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 144:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
ARM GAS  /tmp/ccizixV4.s 			page 6


 145:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 146:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 147:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 148:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 149:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 150:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 151:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 152:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* By default, ThreadX for Cortex-M uses the PRIMASK register to enable/disable interrupts.
 153:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** If using BASEPRI is desired, define the following two symbols for both c and assembly files:
 154:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** TX_PORT_USE_BASEPRI - This tells ThreadX to use BASEPRI instead of PRIMASK.
 155:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** TX_PORT_BASEPRI = (priority_mask << (8 - number_priority_bits)) - this defines the maximum priority
 156:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** Any interrupt with a higher priority than priority_mask will not be masked, thus the interrupt will
 157:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** */
 158:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 159:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 160:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 161:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 162:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 163:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 164:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 165:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 166:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 167:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    source constants would be:
 168:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 169:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0x0a800024)
 170:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 171:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 172:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** */
 173:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 174:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 175:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 176:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0xE0001004)
 177:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 178:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 179:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 180:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 181:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 182:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 183:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 184:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 185:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 186:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 187:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ghs__
 188:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 189:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 190:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 191:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 192:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 193:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 194:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 195:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 196:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 197:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 198:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 199:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 200:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 201:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/ccizixV4.s 			page 7


 202:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 203:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 204:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 205:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 206:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 207:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 208:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 209:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 210:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    a function call.  */
 211:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 212:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 213:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 214:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 215:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 216:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 217:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 218:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 219:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 220:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 221:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 222:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 223:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    logic.  */
 224:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 225:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 226:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 227:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 228:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 229:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 230:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 231:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 232:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 233:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 234:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 235:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 236:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 237:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 238:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 239:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 240:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 241:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 242:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
 243:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 244:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 245:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 246:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 247:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 248:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 249:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 250:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 251:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 252:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 253:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 254:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 255:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 256:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 257:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 258:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
ARM GAS  /tmp/ccizixV4.s 			page 8


 259:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 260:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 261:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 262:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 263:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 264:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 265:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 266:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 267:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 268:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 269:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 270:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 271:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 272:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 273:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 274:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 275:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 276:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 277:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 278:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 279:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 280:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 281:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 282:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 283:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 284:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 285:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 286:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 287:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 288:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 289:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 290:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 291:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 292:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 293:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 294:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 295:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 296:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 297:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 298:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 299:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 300:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 301:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 302:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 303:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 304:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 305:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 306:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 307:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 308:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 309:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 310:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 311:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 312:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 313:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  control_value;
 314:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 315:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
ARM GAS  /tmp/ccizixV4.s 			page 9


 316:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(control_value);
 317:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 318:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 319:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 320:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 321:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 322:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 323:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 324:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 325:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 326:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 327:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 328:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 329:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 330:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  control_value;
 331:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 332:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 333:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(control_value);
 334:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 335:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 336:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 337:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 338:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 339:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 340:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 341:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 342:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 343:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 344:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 345:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 346:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 347:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 348:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 349:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 350:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 351:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 352:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 353:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 354:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 355:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 356:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 357:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 358:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 359:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 360:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 361:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 362:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 363:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 364:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 365:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 366:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 367:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 368:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 369:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 370:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 371:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 372:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/ccizixV4.s 			page 10


 373:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 374:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 375:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 376:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 377:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 378:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 379:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 380:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 381:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 382:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 383:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 384:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 385:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 386:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 387:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 388:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 389:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 390:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         else                                       
 391:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 392:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 393:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((volatile ULONG *) 0xE00
 394:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 395:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 396:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             {                                      
 397:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 398:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 399:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 400:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 401:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 402:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 {                                  
 403:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 404:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 405:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 406:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 }                                  
 407:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             }                                      
 408:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 409:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 410:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 411:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 412:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 413:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 414:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 415:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 416:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 417:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 418:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 419:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 420:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 421:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 422:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         else                                       
 423:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 424:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 425:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 426:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 427:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 428:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             {                                      
 429:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
ARM GAS  /tmp/ccizixV4.s 			page 11


 430:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 431:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 432:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 433:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 434:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 {                                  
 435:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 436:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 437:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 438:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 }                                  
 439:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             }                                      
 440:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 441:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 442:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 443:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 444:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 445:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 446:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 447:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 448:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 449:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 450:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 451:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 452:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 453:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 454:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 455:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 456:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 457:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 458:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 459:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 460:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 461:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 462:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 463:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 464:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 465:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 466:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 467:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 468:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 469:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 470:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
 471:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 472:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 473:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 474:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 475:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 476:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 477:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 478:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 479:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 480:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 481:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 482:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 483:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 484:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 485:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 486:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
ARM GAS  /tmp/ccizixV4.s 			page 12


 487:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 488:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 489:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 490:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(ipsr_value);
 491:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 492:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 493:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 494:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 495:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 496:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 497:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 498:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 499:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 500:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 501:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 502:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 503:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 504:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 505:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 506:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 507:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 508:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 509:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 510:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 511:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 512:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 513:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 514:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 515:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 516:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 517:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 518:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 519:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 520:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 521:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 522:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 523:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 524:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 525:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 526:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 527:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
 528:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 529:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 530:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 531:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 532:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 533:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 534:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 535:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 536:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 537:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 538:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 539:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 540:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 541:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 542:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 543:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
ARM GAS  /tmp/ccizixV4.s 			page 13


 544:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 546:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int posture;
 548:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 549:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 550:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 552:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(posture);
 554:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 555:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 556:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 557:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 558:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 559:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 560:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 561:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 562:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 563:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 564:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 565:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 566:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 567:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 569:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 570:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 571:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 572:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 573:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 575:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 576:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 577:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  53              		.loc 2 578 63 view .LVU11
  54              	.LBB21:
 579:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int int_posture;
  55              		.loc 2 580 1 view .LVU12
 581:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  56              		.loc 2 582 5 view .LVU13
  57              	.LBB22:
  58              	.LBI22:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
  59              		.loc 2 545 63 view .LVU14
  60              	.LBB23:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  61              		.loc 2 547 1 view .LVU15
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  62              		.loc 2 551 5 view .LVU16
  63              		.syntax unified
  64              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
  65 0002 EFF31081 		MRS  r1, PRIMASK 
  66              	@ 0 "" 2
  67              	.LVL1:
ARM GAS  /tmp/ccizixV4.s 			page 14


 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
  68              		.loc 2 553 5 view .LVU17
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
  69              		.loc 2 553 5 is_stmt 0 view .LVU18
  70              		.thumb
  71              		.syntax unified
  72              	.LBE23:
  73              	.LBE22:
 583:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 584:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 585:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 586:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  74              		.loc 2 587 5 is_stmt 1 view .LVU19
  75              		.syntax unified
  76              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
  77 0006 72B6     		CPSID i
  78              	@ 0 "" 2
 588:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 589:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(int_posture);
  79              		.loc 2 589 5 view .LVU20
  80              	.LVL2:
  81              		.loc 2 589 5 is_stmt 0 view .LVU21
  82              		.thumb
  83              		.syntax unified
  84              	.LBE21:
  85              	.LBE20:
  91:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  92:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
  93:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_QUEUE_PRIORITIZE, queue_ptr, queue_ptr -> tx_queue_suspended_c
  94:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  95:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     /* Log this kernel call.  */
  96:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     TX_EL_QUEUE_PRIORITIZE_INSERT
  97:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
  98:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     /* Pickup the suspended count.  */
  99:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     suspended_count =  queue_ptr -> tx_queue_suspended_count;
  86              		.loc 1 99 5 is_stmt 1 view .LVU22
  87              		.loc 1 99 21 is_stmt 0 view .LVU23
  88 0008 C46A     		ldr	r4, [r0, #44]
  89              	.LVL3:
 100:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 101:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     /* Determine if there are fewer than 2 suspended threads.  */
 102:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     if (suspended_count < ((UINT) 2))
  90              		.loc 1 102 5 is_stmt 1 view .LVU24
  91              		.loc 1 102 8 is_stmt 0 view .LVU25
  92 000a 012C     		cmp	r4, #1
  93 000c 09D9     		bls	.L14
 103:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     {
 104:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 105:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Restore interrupts.  */
 106:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         TX_RESTORE
 107:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     }
 108:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 109:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     /* Determine if there how many threads are suspended on this queue.  */
 110:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     else if (suspended_count == ((UINT) 2))
  94              		.loc 1 110 10 is_stmt 1 view .LVU26
  95              		.loc 1 110 13 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccizixV4.s 			page 15


  96 000e 022C     		cmp	r4, #2
  97 0010 0BD0     		beq	.L15
 111:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     {
 112:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 113:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Pickup the head pointer and the next pointer.  */
 114:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         head_ptr =  queue_ptr -> tx_queue_suspension_list;
 115:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         next_thread =  head_ptr -> tx_thread_suspended_next;
 116:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 117:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Determine if the next suspended thread has a higher priority.  */
 118:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         if ((next_thread -> tx_thread_priority) < (head_ptr -> tx_thread_priority))
 119:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 120:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 121:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Yes, move the list head to the next thread.  */
 122:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             queue_ptr -> tx_queue_suspension_list =  next_thread;
 123:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         }
 124:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 125:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Restore interrupts.  */
 126:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         TX_RESTORE
 127:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     }
 128:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     else
 129:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     {
 130:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 131:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Remember the suspension count and head pointer.  */
 132:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         head_ptr =   queue_ptr -> tx_queue_suspension_list;
  98              		.loc 1 132 9 is_stmt 1 view .LVU28
  99              		.loc 1 132 18 is_stmt 0 view .LVU29
 100 0012 856A     		ldr	r5, [r0, #40]
 101              	.LVL4:
 133:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 134:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Default the highest priority thread to the thread at the front of the list.  */
 135:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         priority_thread_ptr =  head_ptr;
 102              		.loc 1 135 9 is_stmt 1 view .LVU30
 136:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 137:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Setup search pointer.  */
 138:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         thread_ptr =  priority_thread_ptr -> tx_thread_suspended_next;
 103              		.loc 1 138 9 view .LVU31
 104              		.loc 1 138 20 is_stmt 0 view .LVU32
 105 0014 2A6F     		ldr	r2, [r5, #112]
 106              	.LVL5:
 139:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 140:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Disable preemption.  */
 141:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         _tx_thread_preempt_disable++;
 107              		.loc 1 141 9 is_stmt 1 view .LVU33
 108              		.loc 1 141 35 is_stmt 0 view .LVU34
 109 0016 214E     		ldr	r6, .L18
 110 0018 3368     		ldr	r3, [r6]
 111 001a 0133     		adds	r3, r3, #1
 112 001c 3360     		str	r3, [r6]
 142:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 143:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Set the list changed flag to false.  */
 144:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         list_changed =  TX_FALSE;
 113              		.loc 1 144 9 is_stmt 1 view .LVU35
 114              	.LVL6:
 132:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 115              		.loc 1 132 18 is_stmt 0 view .LVU36
 116 001e AC46     		mov	ip, r5
 117 0020 1BE0     		b	.L9
ARM GAS  /tmp/ccizixV4.s 			page 16


 118              	.LVL7:
 119              	.L14:
 106:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     }
 120              		.loc 1 106 9 is_stmt 1 view .LVU37
 121              	.LBB24:
 122              	.LBI24:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 123              		.loc 2 568 55 view .LVU38
 124              	.LBB25:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 125              		.loc 2 574 5 view .LVU39
 126              		.syntax unified
 127              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 128 0022 81F31088 		MSR  PRIMASK,r1
 129              	@ 0 "" 2
 130              	.LVL8:
 131              		.thumb
 132              		.syntax unified
 133              	.L3:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 134              		.loc 2 574 5 is_stmt 0 view .LVU40
 135              	.LBE25:
 136              	.LBE24:
 145:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 146:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Search through the list to find the highest priority thread.  */
 147:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         do
 148:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 149:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 150:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Is the current thread higher priority?  */
 151:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             if (thread_ptr -> tx_thread_priority < priority_thread_ptr -> tx_thread_priority)
 152:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 153:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 154:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 /* Yes, remember that this thread is the highest priority.  */
 155:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 priority_thread_ptr =  thread_ptr;
 156:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 157:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 158:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Restore interrupts temporarily.  */
 159:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             TX_RESTORE
 160:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 161:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Disable interrupts again.  */
 162:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             TX_DISABLE
 163:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 164:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Determine if any changes to the list have occurred while
 165:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                interrupts were enabled.  */
 166:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 167:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Is the list head the same?  */
 168:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             if (head_ptr != queue_ptr -> tx_queue_suspension_list)
 169:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 170:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 171:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 /* The list head has changed, set the list changed flag.  */
 172:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 list_changed =  TX_TRUE;
 173:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 174:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             else
 175:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 176:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 177:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 /* Is the suspended count the same?  */
 178:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 if (suspended_count != queue_ptr -> tx_queue_suspended_count)
ARM GAS  /tmp/ccizixV4.s 			page 17


 179:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 {
 180:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 181:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                     /* The list head has changed, set the list changed flag.  */
 182:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                     list_changed =  TX_TRUE;
 183:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 }
 184:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 185:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 186:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Determine if the list has changed.  */
 187:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             if (list_changed == TX_FALSE)
 188:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 189:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 190:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 /* Move the thread pointer to the next thread.  */
 191:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 thread_ptr =  thread_ptr -> tx_thread_suspended_next;
 192:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 193:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             else
 194:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 195:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 196:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 /* Save the suspension count and head pointer.  */
 197:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 head_ptr =   queue_ptr -> tx_queue_suspension_list;
 198:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 suspended_count =  queue_ptr -> tx_queue_suspended_count;
 199:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 200:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 /* Default the highest priority thread to the thread at the front of the list.  */
 201:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 priority_thread_ptr =  head_ptr;
 202:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 203:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 /* Setup search pointer.  */
 204:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 thread_ptr =  priority_thread_ptr -> tx_thread_suspended_next;
 205:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 206:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 /* Reset the list changed flag.  */
 207:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 list_changed =  TX_FALSE;
 208:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 209:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 210:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         } while (thread_ptr != head_ptr);
 211:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 212:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Release preemption.  */
 213:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         _tx_thread_preempt_disable--;
 214:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 215:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Now determine if the highest priority thread is at the front
 216:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****            of the list.  */
 217:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         if (priority_thread_ptr != head_ptr)
 218:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 219:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 220:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* No, we need to move the highest priority suspended thread to the
 221:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                front of the list.  */
 222:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 223:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* First, remove the highest priority thread by updating the
 224:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                adjacent suspended threads.  */
 225:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             next_thread =                                  priority_thread_ptr -> tx_thread_suspend
 226:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread =                              priority_thread_ptr -> tx_thread_suspend
 227:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             next_thread -> tx_thread_suspended_previous =  previous_thread;
 228:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread -> tx_thread_suspended_next =  next_thread;
 229:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 230:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Now, link the highest priority thread at the front of the list.  */
 231:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread =                                      head_ptr -> tx_thread_suspended_
 232:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             priority_thread_ptr -> tx_thread_suspended_next =      head_ptr;
 233:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             priority_thread_ptr -> tx_thread_suspended_previous =  previous_thread;
 234:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread -> tx_thread_suspended_next =          priority_thread_ptr;
 235:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             head_ptr -> tx_thread_suspended_previous =             priority_thread_ptr;
ARM GAS  /tmp/ccizixV4.s 			page 18


 236:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 237:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             /* Move the list head pointer to the highest priority suspended thread.  */
 238:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             queue_ptr -> tx_queue_suspension_list =  priority_thread_ptr;
 239:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         }
 240:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 241:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Restore interrupts.  */
 242:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         TX_RESTORE
 243:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 244:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         /* Check for preemption.  */
 245:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         _tx_thread_system_preempt_check();
 246:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     }
 247:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 248:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     /* Return successful status.  */
 249:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     return(TX_SUCCESS);
 137              		.loc 1 249 5 is_stmt 1 view .LVU41
 250:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** }
 138              		.loc 1 250 1 is_stmt 0 view .LVU42
 139 0026 0020     		movs	r0, #0
 140 0028 70BD     		pop	{r4, r5, r6, pc}
 141              	.LVL9:
 142              	.L15:
 114:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         next_thread =  head_ptr -> tx_thread_suspended_next;
 143              		.loc 1 114 9 is_stmt 1 view .LVU43
 114:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         next_thread =  head_ptr -> tx_thread_suspended_next;
 144              		.loc 1 114 18 is_stmt 0 view .LVU44
 145 002a 836A     		ldr	r3, [r0, #40]
 146              	.LVL10:
 115:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 147              		.loc 1 115 9 is_stmt 1 view .LVU45
 115:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 148              		.loc 1 115 21 is_stmt 0 view .LVU46
 149 002c 1A6F     		ldr	r2, [r3, #112]
 150              	.LVL11:
 118:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 151              		.loc 1 118 9 is_stmt 1 view .LVU47
 118:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 152              		.loc 1 118 26 is_stmt 0 view .LVU48
 153 002e D46A     		ldr	r4, [r2, #44]
 154              	.LVL12:
 118:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 155              		.loc 1 118 61 view .LVU49
 156 0030 DB6A     		ldr	r3, [r3, #44]
 157              	.LVL13:
 118:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 158              		.loc 1 118 12 view .LVU50
 159 0032 9C42     		cmp	r4, r3
 160 0034 00D2     		bcs	.L5
 122:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         }
 161              		.loc 1 122 13 is_stmt 1 view .LVU51
 122:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         }
 162              		.loc 1 122 51 is_stmt 0 view .LVU52
 163 0036 8262     		str	r2, [r0, #40]
 164              	.LVL14:
 165              	.L5:
 126:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     }
 166              		.loc 1 126 9 is_stmt 1 view .LVU53
 167              	.LBB26:
ARM GAS  /tmp/ccizixV4.s 			page 19


 168              	.LBI26:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 169              		.loc 2 568 55 view .LVU54
 170              	.LBB27:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 171              		.loc 2 574 5 view .LVU55
 172              		.syntax unified
 173              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 174 0038 81F31088 		MSR  PRIMASK,r1
 175              	@ 0 "" 2
 176              	.LVL15:
 576:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 177              		.loc 2 576 1 is_stmt 0 view .LVU56
 178              		.thumb
 179              		.syntax unified
 180 003c F3E7     		b	.L3
 181              	.LVL16:
 182              	.L6:
 576:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 183              		.loc 2 576 1 view .LVU57
 184              	.LBE27:
 185              	.LBE26:
 159:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 186              		.loc 1 159 13 is_stmt 1 view .LVU58
 187              	.LBB28:
 188              	.LBI28:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 189              		.loc 2 568 55 view .LVU59
 190              	.LBB29:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 191              		.loc 2 574 5 view .LVU60
 192              		.syntax unified
 193              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 194 003e 81F31088 		MSR  PRIMASK,r1
 195              	@ 0 "" 2
 196              	.LVL17:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 197              		.loc 2 574 5 is_stmt 0 view .LVU61
 198              		.thumb
 199              		.syntax unified
 200              	.LBE29:
 201              	.LBE28:
 162:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 202              		.loc 1 162 13 is_stmt 1 view .LVU62
 203              	.LBB30:
 204              	.LBI30:
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 205              		.loc 2 578 63 view .LVU63
 206              	.LBB31:
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 207              		.loc 2 580 1 view .LVU64
 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 208              		.loc 2 582 5 view .LVU65
 209              	.LBB32:
 210              	.LBI32:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 211              		.loc 2 545 63 view .LVU66
ARM GAS  /tmp/ccizixV4.s 			page 20


 212              	.LBB33:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 213              		.loc 2 547 1 view .LVU67
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 214              		.loc 2 551 5 view .LVU68
 215              		.syntax unified
 216              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 217 0042 EFF31081 		MRS  r1, PRIMASK 
 218              	@ 0 "" 2
 219              	.LVL18:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 220              		.loc 2 553 5 view .LVU69
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 221              		.loc 2 553 5 is_stmt 0 view .LVU70
 222              		.thumb
 223              		.syntax unified
 224              	.LBE33:
 225              	.LBE32:
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 226              		.loc 2 587 5 is_stmt 1 view .LVU71
 227              		.syntax unified
 228              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 229 0046 72B6     		CPSID i
 230              	@ 0 "" 2
 231              		.loc 2 589 5 view .LVU72
 232              	.LVL19:
 233              		.loc 2 589 5 is_stmt 0 view .LVU73
 234              		.thumb
 235              		.syntax unified
 236              	.LBE31:
 237              	.LBE30:
 168:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 238              		.loc 1 168 13 is_stmt 1 view .LVU74
 168:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 239              		.loc 1 168 39 is_stmt 0 view .LVU75
 240 0048 836A     		ldr	r3, [r0, #40]
 168:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 241              		.loc 1 168 16 view .LVU76
 242 004a 6345     		cmp	r3, ip
 243 004c 0BD0     		beq	.L16
 244              	.L7:
 245              	.LVL20:
 197:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 suspended_count =  queue_ptr -> tx_queue_suspended_count;
 246              		.loc 1 197 17 is_stmt 1 view .LVU77
 198:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 247              		.loc 1 198 17 view .LVU78
 198:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 248              		.loc 1 198 33 is_stmt 0 view .LVU79
 249 004e C46A     		ldr	r4, [r0, #44]
 250              	.LVL21:
 201:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 251              		.loc 1 201 17 is_stmt 1 view .LVU80
 204:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 252              		.loc 1 204 17 view .LVU81
 204:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 253              		.loc 1 204 28 is_stmt 0 view .LVU82
 254 0050 1A6F     		ldr	r2, [r3, #112]
ARM GAS  /tmp/ccizixV4.s 			page 21


 255              	.LVL22:
 207:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 256              		.loc 1 207 17 is_stmt 1 view .LVU83
 201:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 257              		.loc 1 201 37 is_stmt 0 view .LVU84
 258 0052 1D46     		mov	r5, r3
 259              	.LVL23:
 260              	.L8:
 210:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 261              		.loc 1 210 29 is_stmt 1 view .LVU85
 262 0054 9342     		cmp	r3, r2
 263 0056 0BD0     		beq	.L17
 210:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 264              		.loc 1 210 29 is_stmt 0 view .LVU86
 265 0058 9C46     		mov	ip, r3
 266              	.LVL24:
 267              	.L9:
 147:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 268              		.loc 1 147 9 is_stmt 1 view .LVU87
 151:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 269              		.loc 1 151 13 view .LVU88
 151:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 270              		.loc 1 151 72 is_stmt 0 view .LVU89
 271 005a EB6A     		ldr	r3, [r5, #44]
 151:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 272              		.loc 1 151 16 view .LVU90
 273 005c D66A     		ldr	r6, [r2, #44]
 274 005e 9E42     		cmp	r6, r3
 275 0060 EDD2     		bcs	.L6
 155:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 276              		.loc 1 155 37 view .LVU91
 277 0062 1546     		mov	r5, r2
 278              	.LVL25:
 155:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 279              		.loc 1 155 37 view .LVU92
 280 0064 EBE7     		b	.L6
 281              	.LVL26:
 282              	.L16:
 178:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 {
 283              		.loc 1 178 17 is_stmt 1 view .LVU93
 178:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****                 {
 284              		.loc 1 178 20 is_stmt 0 view .LVU94
 285 0066 C66A     		ldr	r6, [r0, #44]
 286 0068 A642     		cmp	r6, r4
 287 006a F0D1     		bne	.L7
 187:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             {
 288              		.loc 1 187 13 is_stmt 1 view .LVU95
 191:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 289              		.loc 1 191 17 view .LVU96
 191:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 290              		.loc 1 191 28 is_stmt 0 view .LVU97
 291 006c 126F     		ldr	r2, [r2, #112]
 292              	.LVL27:
 191:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             }
 293              		.loc 1 191 28 view .LVU98
 294 006e F1E7     		b	.L8
 295              	.LVL28:
ARM GAS  /tmp/ccizixV4.s 			page 22


 296              	.L17:
 213:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 297              		.loc 1 213 9 is_stmt 1 view .LVU99
 213:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 298              		.loc 1 213 35 is_stmt 0 view .LVU100
 299 0070 0A4C     		ldr	r4, .L18
 300              	.LVL29:
 213:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 301              		.loc 1 213 35 view .LVU101
 302 0072 2268     		ldr	r2, [r4]
 303              	.LVL30:
 213:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 304              		.loc 1 213 35 view .LVU102
 305 0074 013A     		subs	r2, r2, #1
 306 0076 2260     		str	r2, [r4]
 217:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 307              		.loc 1 217 9 is_stmt 1 view .LVU103
 217:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         {
 308              		.loc 1 217 12 is_stmt 0 view .LVU104
 309 0078 AB42     		cmp	r3, r5
 310 007a 09D0     		beq	.L10
 225:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread =                              priority_thread_ptr -> tx_thread_suspend
 311              		.loc 1 225 13 is_stmt 1 view .LVU105
 225:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread =                              priority_thread_ptr -> tx_thread_suspend
 312              		.loc 1 225 25 is_stmt 0 view .LVU106
 313 007c 2C6F     		ldr	r4, [r5, #112]
 314              	.LVL31:
 226:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             next_thread -> tx_thread_suspended_previous =  previous_thread;
 315              		.loc 1 226 13 is_stmt 1 view .LVU107
 226:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             next_thread -> tx_thread_suspended_previous =  previous_thread;
 316              		.loc 1 226 29 is_stmt 0 view .LVU108
 317 007e 6A6F     		ldr	r2, [r5, #116]
 318              	.LVL32:
 227:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread -> tx_thread_suspended_next =  next_thread;
 319              		.loc 1 227 13 is_stmt 1 view .LVU109
 227:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread -> tx_thread_suspended_next =  next_thread;
 320              		.loc 1 227 57 is_stmt 0 view .LVU110
 321 0080 6267     		str	r2, [r4, #116]
 228:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 322              		.loc 1 228 13 is_stmt 1 view .LVU111
 228:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 323              		.loc 1 228 57 is_stmt 0 view .LVU112
 324 0082 1467     		str	r4, [r2, #112]
 231:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             priority_thread_ptr -> tx_thread_suspended_next =      head_ptr;
 325              		.loc 1 231 13 is_stmt 1 view .LVU113
 231:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             priority_thread_ptr -> tx_thread_suspended_next =      head_ptr;
 326              		.loc 1 231 29 is_stmt 0 view .LVU114
 327 0084 5A6F     		ldr	r2, [r3, #116]
 328              	.LVL33:
 232:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             priority_thread_ptr -> tx_thread_suspended_previous =  previous_thread;
 329              		.loc 1 232 13 is_stmt 1 view .LVU115
 232:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             priority_thread_ptr -> tx_thread_suspended_previous =  previous_thread;
 330              		.loc 1 232 61 is_stmt 0 view .LVU116
 331 0086 2B67     		str	r3, [r5, #112]
 233:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread -> tx_thread_suspended_next =          priority_thread_ptr;
 332              		.loc 1 233 13 is_stmt 1 view .LVU117
 233:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             previous_thread -> tx_thread_suspended_next =          priority_thread_ptr;
ARM GAS  /tmp/ccizixV4.s 			page 23


 333              		.loc 1 233 65 is_stmt 0 view .LVU118
 334 0088 6A67     		str	r2, [r5, #116]
 234:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             head_ptr -> tx_thread_suspended_previous =             priority_thread_ptr;
 335              		.loc 1 234 13 is_stmt 1 view .LVU119
 234:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****             head_ptr -> tx_thread_suspended_previous =             priority_thread_ptr;
 336              		.loc 1 234 57 is_stmt 0 view .LVU120
 337 008a 1567     		str	r5, [r2, #112]
 235:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 338              		.loc 1 235 13 is_stmt 1 view .LVU121
 235:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 339              		.loc 1 235 54 is_stmt 0 view .LVU122
 340 008c 5D67     		str	r5, [r3, #116]
 238:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         }
 341              		.loc 1 238 13 is_stmt 1 view .LVU123
 238:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****         }
 342              		.loc 1 238 51 is_stmt 0 view .LVU124
 343 008e 8562     		str	r5, [r0, #40]
 344              	.LVL34:
 345              	.L10:
 242:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c **** 
 346              		.loc 1 242 9 is_stmt 1 view .LVU125
 347              	.LBB34:
 348              	.LBI34:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 349              		.loc 2 568 55 view .LVU126
 350              	.LBB35:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 351              		.loc 2 574 5 view .LVU127
 352              		.syntax unified
 353              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 354 0090 81F31088 		MSR  PRIMASK,r1
 355              	@ 0 "" 2
 356              	.LVL35:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 357              		.loc 2 574 5 is_stmt 0 view .LVU128
 358              		.thumb
 359              		.syntax unified
 360              	.LBE35:
 361              	.LBE34:
 245:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     }
 362              		.loc 1 245 9 is_stmt 1 view .LVU129
 363 0094 FFF7FEFF 		bl	_tx_thread_system_preempt_check
 364              	.LVL36:
 245:Middlewares/ST/threadx/common/src/tx_queue_prioritize.c ****     }
 365              		.loc 1 245 9 is_stmt 0 view .LVU130
 366 0098 C5E7     		b	.L3
 367              	.L19:
 368 009a 00BF     		.align	2
 369              	.L18:
 370 009c 00000000 		.word	_tx_thread_preempt_disable
 371              		.cfi_endproc
 372              	.LFE8:
 374              		.text
 375              	.Letext0:
 376              		.file 3 "Middlewares/ST/threadx/common/inc/tx_api.h"
 377              		.file 4 "Middlewares/ST/threadx/common/inc/tx_thread.h"
ARM GAS  /tmp/ccizixV4.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 tx_queue_prioritize.c
     /tmp/ccizixV4.s:20     .text._tx_queue_prioritize:00000000 $t
     /tmp/ccizixV4.s:26     .text._tx_queue_prioritize:00000000 _tx_queue_prioritize
     /tmp/ccizixV4.s:370    .text._tx_queue_prioritize:0000009c $d

UNDEFINED SYMBOLS
_tx_thread_system_preempt_check
_tx_thread_preempt_disable
