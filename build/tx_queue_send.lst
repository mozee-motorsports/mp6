ARM GAS  /tmp/cc9uBmqC.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tx_queue_send.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Middlewares/ST/threadx/common/src/tx_queue_send.c"
  19              		.section	.text._tx_queue_send,"ax",%progbits
  20              		.align	1
  21              		.global	_tx_queue_send
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_tx_queue_send:
  27              	.LVL0:
  28              	.LFB8:
   1:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
   2:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
   3:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
   5:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  10:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  11:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  12:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  13:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  14:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  15:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**                                                                       */
  16:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**                                                                       */
  18:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**   Queue                                                               */
  19:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**                                                                       */
  20:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  21:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  22:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  23:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #define TX_SOURCE_CODE
  24:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  25:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  26:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /* Include necessary system files.  */
  27:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  28:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #include "tx_api.h"
  29:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #include "tx_trace.h"
  30:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #include "tx_thread.h"
ARM GAS  /tmp/cc9uBmqC.s 			page 2


  31:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #include "tx_queue.h"
  32:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  33:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  34:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  35:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  36:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  FUNCTION                                               RELEASE        */
  37:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  38:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_queue_send                                      PORTABLE C      */
  39:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                           6.1          */
  40:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  AUTHOR                                                                */
  41:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  42:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    William E. Lamie, Microsoft Corporation                             */
  43:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  44:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  DESCRIPTION                                                           */
  45:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  46:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    This function places a message into the specified queue.  If there  */
  47:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    is no room in the queue, this function waits according to the       */
  48:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    option specified.                                                   */
  49:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  50:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  INPUT                                                                 */
  51:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  52:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    queue_ptr                         Pointer to queue control block    */
  53:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    source_ptr                        Pointer to message source         */
  54:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    wait_option                       Suspension option                 */
  55:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  56:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  OUTPUT                                                                */
  57:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  58:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    status                            Completion status                 */
  59:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  60:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  CALLS                                                                 */
  61:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  62:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_thread_system_resume          Resume thread routine             */
  63:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_thread_system_ni_resume       Non-interruptable resume thread   */
  64:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_thread_system_suspend         Suspend thread routine            */
  65:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    _tx_thread_system_ni_suspend      Non-interruptable suspend thread  */
  66:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  67:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  CALLED BY                                                             */
  68:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  69:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    Application Code                                                    */
  70:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  71:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  RELEASE HISTORY                                                       */
  72:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  73:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*    DATE              NAME                      DESCRIPTION             */
  74:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  75:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  76:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  77:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                            resulting in version 6.1    */
  78:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /*                                                                        */
  79:Middlewares/ST/threadx/common/src/tx_queue_send.c **** /**************************************************************************/
  80:Middlewares/ST/threadx/common/src/tx_queue_send.c **** UINT  _tx_queue_send(TX_QUEUE *queue_ptr, VOID *source_ptr, ULONG wait_option)
  81:Middlewares/ST/threadx/common/src/tx_queue_send.c **** {
  29              		.loc 1 81 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 81 1 is_stmt 0 view .LVU1
  34 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/cc9uBmqC.s 			page 3


  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 0446     		mov	r4, r0
  82:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  83:Middlewares/ST/threadx/common/src/tx_queue_send.c **** TX_INTERRUPT_SAVE_AREA
  42              		.loc 1 83 1 is_stmt 1 view .LVU2
  84:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  85:Middlewares/ST/threadx/common/src/tx_queue_send.c **** TX_THREAD       *thread_ptr;
  43              		.loc 1 85 1 view .LVU3
  86:Middlewares/ST/threadx/common/src/tx_queue_send.c **** ULONG           *source;
  44              		.loc 1 86 1 view .LVU4
  87:Middlewares/ST/threadx/common/src/tx_queue_send.c **** ULONG           *destination;
  45              		.loc 1 87 1 view .LVU5
  88:Middlewares/ST/threadx/common/src/tx_queue_send.c **** UINT            size;
  46              		.loc 1 88 1 view .LVU6
  89:Middlewares/ST/threadx/common/src/tx_queue_send.c **** UINT            suspended_count;
  47              		.loc 1 89 1 view .LVU7
  90:Middlewares/ST/threadx/common/src/tx_queue_send.c **** TX_THREAD       *next_thread;
  48              		.loc 1 90 1 view .LVU8
  91:Middlewares/ST/threadx/common/src/tx_queue_send.c **** TX_THREAD       *previous_thread;
  49              		.loc 1 91 1 view .LVU9
  92:Middlewares/ST/threadx/common/src/tx_queue_send.c **** UINT            status;
  50              		.loc 1 92 1 view .LVU10
  93:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
  94:Middlewares/ST/threadx/common/src/tx_queue_send.c **** VOID            (*queue_send_notify)(struct TX_QUEUE_STRUCT *notify_queue_ptr);
  95:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
  96:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  97:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
  98:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Default the status to TX_SUCCESS.  */
  99:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     status =  TX_SUCCESS;
  51              		.loc 1 99 5 view .LVU11
  52              	.LVL1:
 100:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 101:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Disable interrupts to place message in the queue.  */
 102:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     TX_DISABLE
  53              		.loc 1 102 5 view .LVU12
  54              	.LBB18:
  55              	.LBI18:
  56              		.file 2 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h"
   1:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
   2:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
   3:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
   5:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       This software is licensed under the Microsoft Software License   */
   6:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*       and in the root directory of this software.                      */
   9:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  10:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  11:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  12:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  13:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  14:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
ARM GAS  /tmp/cc9uBmqC.s 			page 4


  15:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  16:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /** ThreadX Component                                                     */
  17:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  18:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**   Port Specific                                                       */
  19:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**                                                                       */
  20:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  21:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  22:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  23:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  24:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  25:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  26:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  PORT SPECIFIC C INFORMATION                            RELEASE        */
  27:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  28:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    tx_port.h                                         Cortex-M7/GNU     */
  29:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                           6.1.12       */
  30:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  31:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  AUTHOR                                                                */
  32:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  33:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    Scott Larson, Microsoft Corporation                                 */
  34:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  35:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  DESCRIPTION                                                           */
  36:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  37:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    This file contains data type definitions that make the ThreadX      */
  38:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    real-time kernel function identically on a variety of different     */
  39:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    processor architectures.  For example, the size or number of bits   */
  40:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    in an "int" data type vary between microprocessor architectures and */
  41:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    even C compilers for the same microprocessor.  ThreadX does not     */
  42:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    directly use native C data types.  Instead, ThreadX creates its     */
  43:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    own special types that can be mapped to actual data types by this   */
  44:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    file to guarantee consistency in the interface and functionality.   */
  45:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  46:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    This file replaces the previous Cortex-M3/M4/M7 files. It unifies   */
  47:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    the ARMv7-M architecture and compilers into one common file.        */
  48:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  49:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  RELEASE HISTORY                                                       */
  50:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  51:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*    DATE              NAME                      DESCRIPTION             */
  52:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  53:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  06-02-2021      Scott Larson            Initial Version 6.1.7         */
  54:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  01-31-2022      Scott Larson            Modified comments, updated    */
  55:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            typedef to fix misra        */
  56:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            violation,                  */
  57:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            fixed predefined macro,     */
  58:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.10 */
  59:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  04-25-2022      Scott Larson            Modified comments and added   */
  60:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            volatile to registers,      */
  61:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.11 */
  62:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*  07-29-2022      Scott Larson            Modified comments and         */
  63:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            described BASEPRI usage,    */
  64:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                            resulting in version 6.1.12 */
  65:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*                                                                        */
  66:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /**************************************************************************/
  67:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  68:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_PORT_H
  69:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_H
  70:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  71:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/cc9uBmqC.s 			page 5


  72:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Determine if the optional ThreadX user define file should be used.  */
  73:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  74:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_INCLUDE_USER_DEFINE_FILE
  75:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  76:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Yes, include the user defines in tx_user.h. The defines in this file may
  77:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    alternately be defined on the command line.  */
  78:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  79:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include "tx_user.h"
  80:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  81:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  82:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  83:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define compiler library include files.  */
  84:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  85:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <stdlib.h>
  86:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <string.h>
  87:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  88:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ICCARM__
  89:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <intrinsics.h>                     /* IAR Intrinsics */
  90:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __asm__ __asm                       /* Define to make all inline asm look similar */
  91:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
  92:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <yvals.h>
  93:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  94:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif /* __ICCARM__ */
  95:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
  96:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ghs__
  97:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include <arm_ghs.h>
  98:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #include "tx_ghs.h"
  99:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 100:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 101:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 102:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if !defined(__GNUC__) && !defined(__CC_ARM)
 103:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __get_control_value __get_CONTROL
 104:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __set_control_value __set_CONTROL
 105:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 106:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 107:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef __GNUC__
 108:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define __get_ipsr_value __get_IPSR
 109:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 110:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 111:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define ThreadX basic types for this port.  */
 112:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 113:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define VOID                                    void
 114:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef char                                    CHAR;
 115:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned char                           UCHAR;
 116:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef int                                     INT;
 117:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned int                            UINT;
 118:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef long                                    LONG;
 119:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned long                           ULONG;
 120:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned long long                      ULONG64;
 121:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef short                                   SHORT;
 122:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** typedef unsigned short                          USHORT;
 123:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define ULONG64_DEFINED
 124:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 125:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the priority levels for ThreadX.  Legal values range
 126:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    from 32 to 1024 and MUST be evenly divisible by 32.  */
 127:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 128:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MAX_PRIORITIES
ARM GAS  /tmp/cc9uBmqC.s 			page 6


 129:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MAX_PRIORITIES                       32
 130:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 131:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 132:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 133:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the minimum stack for a ThreadX thread on this processor. If the size supplied during
 134:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    thread creation is less than this value, the thread create call will return an error.  */
 135:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 136:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MINIMUM_STACK
 137:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MINIMUM_STACK                        200         /* Minimum stack size for this port  */
 138:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 139:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 140:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 141:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the system timer thread's default stack size and priority.  These are only applicable
 142:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    if TX_TIMER_PROCESS_IN_ISR is not defined.  */
 143:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 144:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_STACK_SIZE
 145:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_STACK_SIZE              1024        /* Default timer thread stack size  */
 146:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 147:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 148:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TIMER_THREAD_PRIORITY
 149:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_THREAD_PRIORITY                0           /* Default timer thread priority    */
 150:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 151:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 152:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* By default, ThreadX for Cortex-M uses the PRIMASK register to enable/disable interrupts.
 153:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** If using BASEPRI is desired, define the following two symbols for both c and assembly files:
 154:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** TX_PORT_USE_BASEPRI - This tells ThreadX to use BASEPRI instead of PRIMASK.
 155:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** TX_PORT_BASEPRI = (priority_mask << (8 - number_priority_bits)) - this defines the maximum priority
 156:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** Any interrupt with a higher priority than priority_mask will not be masked, thus the interrupt will
 157:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** */
 158:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 159:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define various constants for the ThreadX Cortex-M port.  */
 160:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 161:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INT_DISABLE                          1           /* Disable interrupts               */
 162:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INT_ENABLE                           0           /* Enable interrupts                */
 163:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 164:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 165:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the clock source for trace event entry time stamp. The following two item are port specif
 166:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    For example, if the time source is at the address 0x0a800024 and is 16-bits in size, the clock
 167:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    source constants would be:
 168:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 169:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0x0a800024)
 170:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0x0000FFFFUL
 171:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 172:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** */
 173:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 174:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 175:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_SOURCE
 176:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    *((volatile ULONG *) 0xE0001004)
 177:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 178:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 179:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG   _tx_misra_time_stamp_get(VOID);
 180:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_SOURCE                    _tx_misra_time_stamp_get()
 181:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 182:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 183:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_TRACE_TIME_MASK
 184:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TRACE_TIME_MASK                      0xFFFFFFFFUL
 185:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
ARM GAS  /tmp/cc9uBmqC.s 			page 7


 186:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 187:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ghs__
 188:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define constants for Green Hills EventAnalyzer.  */
 189:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 190:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the number of ticks per second. This informs the EventAnalyzer what the timestamps
 191:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    represent.  By default, this is set to 1,000,000 i.e., one tick every microsecond. */
 192:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 193:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EL_TICKS_PER_SECOND                  1000000
 194:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 195:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the method of how to get the upper and lower 32-bits of the time stamp. By default, simpl
 196:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    simulate the time-stamp source with a counter.  */
 197:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 198:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define read_tbu()                              _tx_el_time_base_upper
 199:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define read_tbl()                              ++_tx_el_time_base_lower
 200:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* __ghs__ */
 201:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 202:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the port specific options for the _tx_build_options variable. This variable indicates
 203:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    how the ThreadX library was built.  */
 204:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 205:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_BUILD_OPTIONS          (0)
 206:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 207:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 208:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the in-line initialization constant so that modules with in-line
 209:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    initialization capabilities can prevent their initialization from being
 210:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    a function call.  */
 211:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 212:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
 213:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_DISABLE_INLINE
 214:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 215:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_INLINE_INITIALIZATION
 216:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 217:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 218:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 219:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Determine whether or not stack checking is enabled. By default, ThreadX stack checking is
 220:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    disabled. When the following is defined, ThreadX thread stack checking is enabled.  If stack
 221:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    checking is enabled (TX_ENABLE_STACK_CHECKING is defined), the TX_DISABLE_STACK_FILLING
 222:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    define is negated, thereby forcing the stack fill which is necessary for the stack checking
 223:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    logic.  */
 224:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 225:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 226:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_ENABLE_STACK_CHECKING
 227:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #undef TX_DISABLE_STACK_FILLING
 228:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 229:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 230:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 231:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 232:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the TX_THREAD control block extensions for this port. The main reason
 233:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    for the multiple macros is so that backward compatibility can be maintained with
 234:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    existing ThreadX kernel awareness modules.  */
 235:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 236:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_0
 237:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_1
 238:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 239:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID    *tx_thread_iar_tls_pointer;
 240:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ghs__)
 241:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2           VOID *  tx_thread_eh_globals;                           \
 242:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                         int     Errno;             /* errno.  */                \
ARM GAS  /tmp/cc9uBmqC.s 			page 8


 243:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                         char *  strtok_saved_pos;  /* strtok() position.  */
 244:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 245:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_2
 246:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 247:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 248:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 249:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_EXTENSION_3
 250:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 251:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 252:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 253:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the port extensions of the remaining ThreadX objects.  */
 254:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 255:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_EXTENSION
 256:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_EXTENSION
 257:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_EXTENSION
 258:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_EXTENSION
 259:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_EXTENSION
 260:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_EXTENSION
 261:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_EXTENSION
 262:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 263:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 264:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the user extension field of the thread control block.  Nothing
 265:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    additional is needed for this port so it is defined as white space.  */
 266:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 267:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_USER_EXTENSION
 268:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_USER_EXTENSION
 269:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 270:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 271:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 272:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the macros for processing extensions in tx_thread_create, tx_thread_delete,
 273:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    tx_thread_shell_entry, and tx_thread_terminate.  */
 274:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 275:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 276:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef  TX_ENABLE_IAR_LIBRARY_SUPPORT
 277:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if (__VER__ < 8000000)
 278:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 279:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      __iar_dlib_perthread_deallocate
 280:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     thread_ptr -> tx_thread_iar_tls
 281:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               __iar_dlib_perthread_access(0);
 282:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 283:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    *_tx_iar_create_per_thread_tls_area(void);
 284:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    _tx_iar_destroy_per_thread_tls_area(void *tls_ptr);
 285:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void    __iar_Initlocks(void);
 286:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 287:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)                      thread_ptr -> tx_thread_iar_tls
 288:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)                      do {_tx_iar_destroy_per_thread_
 289:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                         thread_ptr -> tx_thread_iar
 290:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_PRE_SCHEDULER_INITIALIZATION               do {__iar_Initlocks();} while(0
 291:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 292:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 293:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_CREATE_EXTENSION(thread_ptr)
 294:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_DELETE_EXTENSION(thread_ptr)
 295:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 296:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 297:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_FPU_VFP)
 298:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 299:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_MISRA_ENABLE
ARM GAS  /tmp/cc9uBmqC.s 			page 9


 300:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 301:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  _tx_misra_control_get(void);
 302:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void   _tx_misra_control_set(ULONG value);
 303:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  _tx_misra_fpccr_get(void);
 304:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void   _tx_misra_vfp_touch(void);
 305:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 306:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE not defined */
 307:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 308:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define some helper functions (these are intrinsics in some compilers). */
 309:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __GNUC__ /* GCC and ARM Compiler 6 */
 310:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 311:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline ULONG __get_control_value(void)
 312:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 313:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  control_value;
 314:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 315:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
 316:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(control_value);
 317:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 318:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 319:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_control_value(ULONG control_value)
 320:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 321:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
 322:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 323:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 324:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 325:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 326:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* ARM Compiler 5 */
 327:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 328:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) ULONG __get_control_value(void)
 329:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 330:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG  control_value;
 331:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 332:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm volatile ("MRS control_value,CONTROL");
 333:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(control_value);
 334:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 335:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 336:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) void __set_control_value(ULONG control_value)
 337:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 338:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR CONTROL,control_value");
 339:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 340:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Can't access VFP registers with inline asm, so define this in tx_thread_schedule.  */
 341:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** void _tx_vfp_access(void);
 342:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  _tx_vfp_access();
 343:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 344:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)  /* IAR */
 345:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_VFP_TOUCH()  __asm__ volatile ("VMOV.F32 s0, s0");
 346:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* Helper functions for different compilers */
 347:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 348:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 349:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 350:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 351:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* A completed thread falls into _thread_shell_entry and we can simply deactivate the FPU via CONTR
 352:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    in order to ensure no lazy stacking will occur. */
 353:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 354:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 355:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 356:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
ARM GAS  /tmp/cc9uBmqC.s 			page 10


 357:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 358:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  __get_control_value();    
 359:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 360:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         __set_control_value(_tx_vfp_state);        
 361:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 362:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 363:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 364:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)   {                                              
 365:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_vfp_state;                          
 366:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_misra_control_get();  
 367:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_vfp_state =  _tx_vfp_state & ~((ULONG) 
 368:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_misra_control_set(_tx_vfp_state);      
 369:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 370:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 371:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 372:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 373:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* A thread can be terminated by another thread, so we first check if it's self-terminating and not
 374:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    If so, deactivate the FPU via CONTROL.FPCA. Otherwise we are in an interrupt or another thread i
 375:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    this one, so if the FPCCR.LSPACT bit is set, we need to save the CONTROL.FPCA state, touch the F
 376:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    the lazy FPU save, then restore the CONTROL.FPCA state. */
 377:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 378:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 379:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 380:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 381:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
 382:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 383:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 384:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 385:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 386:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  __get_control_value();
 387:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 388:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             __set_control_value(_tx_vfp_state);    
 389:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 390:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         else                                       
 391:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 392:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 393:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  *((volatile ULONG *) 0xE00
 394:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 395:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 396:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             {                                      
 397:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 398:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = __get_control_value
 399:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 400:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 TX_VFP_TOUCH();                    
 401:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 402:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 {                                  
 403:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  __get_control_
 404:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 405:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     __set_control_value(_tx_vfp_sta
 406:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 }                                  
 407:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             }                                      
 408:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 409:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 410:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 411:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 412:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)  {                                              
 413:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     ULONG  _tx_system_state;                       
ARM GAS  /tmp/cc9uBmqC.s 			page 11


 414:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         _tx_system_state =  TX_THREAD_GET_SYSTEM_ST
 415:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         if ((_tx_system_state == ((ULONG) 0)) && ((
 416:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 417:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_vfp_state;                      
 418:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_misra_control_get(
 419:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_vfp_state =  _tx_vfp_state & ~((ULO
 420:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_misra_control_set(_tx_vfp_state);  
 421:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 422:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         else                                       
 423:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         {                                          
 424:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         ULONG  _tx_fpccr;                          
 425:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_misra_fpccr_get();    
 426:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             _tx_fpccr =  _tx_fpccr & ((ULONG) 0x01)
 427:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             if (_tx_fpccr == ((ULONG) 0x01))       
 428:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             {                                      
 429:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             ULONG _tx_vfp_state;                   
 430:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state = _tx_misra_control_g
 431:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_vfp_state =  _tx_vfp_state & ((
 432:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 _tx_misra_vfp_touch();             
 433:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 if (_tx_vfp_state == ((ULONG) 0))  
 434:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 {                                  
 435:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_misra_cont
 436:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_vfp_state =  _tx_vfp_state 
 437:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                     _tx_misra_control_set(_tx_vfp_s
 438:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                                 }                                  
 439:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                             }                                      
 440:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                         }                                          
 441:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                     }
 442:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 443:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 444:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* No VFP in use */
 445:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 446:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
 447:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_TERMINATED_EXTENSION(thread_ptr)
 448:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 449:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* defined(__ARMVFP__) || defined(__ARM_PCS_VFP) || defined(__ARM_FP) || defined(__TARGET_F
 450:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 451:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 452:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the ThreadX object creation extensions for the remaining objects.  */
 453:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 454:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_CREATE_EXTENSION(pool_ptr)
 455:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_CREATE_EXTENSION(pool_ptr)
 456:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_CREATE_EXTENSION(group_ptr)
 457:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_CREATE_EXTENSION(mutex_ptr)
 458:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_CREATE_EXTENSION(queue_ptr)
 459:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_CREATE_EXTENSION(semaphore_ptr)
 460:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_CREATE_EXTENSION(timer_ptr)
 461:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 462:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 463:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the ThreadX object deletion extensions for the remaining objects.  */
 464:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 465:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BLOCK_POOL_DELETE_EXTENSION(pool_ptr)
 466:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_BYTE_POOL_DELETE_EXTENSION(pool_ptr)
 467:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_EVENT_FLAGS_GROUP_DELETE_EXTENSION(group_ptr)
 468:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_MUTEX_DELETE_EXTENSION(mutex_ptr)
 469:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_QUEUE_DELETE_EXTENSION(queue_ptr)
 470:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_SEMAPHORE_DELETE_EXTENSION(semaphore_ptr)
ARM GAS  /tmp/cc9uBmqC.s 			page 12


 471:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_TIMER_DELETE_EXTENSION(timer_ptr)
 472:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 473:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 474:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the get system state macro.  */
 475:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 476:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_GET_SYSTEM_STATE
 477:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_MISRA_ENABLE
 478:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 479:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __CC_ARM /* ARM Compiler 5 */
 480:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 481:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** register unsigned int _ipsr __asm("ipsr");
 482:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _ipsr)
 483:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 484:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and ARM Compiler 6 */
 485:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 486:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_ipsr_value(void)
 487:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 488:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int  ipsr_value;
 489:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
 490:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(ipsr_value);
 491:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 492:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 493:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_ipsr_value())
 494:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 495:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__ICCARM__)   /* IAR */
 496:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 497:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | __get_IPSR())
 498:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 499:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE for different compilers */
 500:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 501:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else   /* TX_MISRA_ENABLE is defined, use MISRA function. */
 502:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** ULONG   _tx_misra_ipsr_get(VOID);
 503:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_GET_SYSTEM_STATE()        (_tx_thread_system_state | _tx_misra_ipsr_get())
 504:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_MISRA_ENABLE */
 505:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif  /* TX_THREAD_GET_SYSTEM_STATE */
 506:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 507:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 508:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the check for whether or not to call the _tx_thread_system_return function.  A non-zero v
 509:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    indicates that _tx_thread_system_return should not be called. This overrides the definition in t
 510:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    for Cortex-M since so we don't waste time checking the _tx_thread_system_state variable that is 
 511:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    zero after initialization for Cortex-M ports. */
 512:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 513:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_THREAD_SYSTEM_RETURN_CHECK
 514:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_THREAD_SYSTEM_RETURN_CHECK(c)    (c) = ((ULONG) _tx_thread_preempt_disable);
 515:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 516:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 517:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the macro to ensure _tx_thread_preempt_disable is set early in initialization in order to
 518:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****    prevent early scheduling on Cortex-M parts.  */
 519:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 520:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_PORT_SPECIFIC_POST_INITIALIZATION    _tx_thread_preempt_disable++;
 521:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 522:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 523:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 524:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 525:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifndef TX_DISABLE_INLINE
 526:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 527:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the TX_LOWEST_SET_BIT_CALCULATE macro for each compiler. */
ARM GAS  /tmp/cc9uBmqC.s 			page 13


 528:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef __ICCARM__       /* IAR Compiler */
 529:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __CLZ(__RBIT((m)));
 530:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__CC_ARM) /* AC5 Compiler */
 531:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       (b) = (UINT) __clz(__rbit((m)));
 532:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #elif defined(__GNUC__) /* GCC and AC6 Compiler */
 533:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #define TX_LOWEST_SET_BIT_CALCULATE(m, b)       __asm__ volatile (" RBIT %0,%1 ": "=r" (m) : "r" (m
 534:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****                                                 __asm__ volatile (" CLZ  %0,%1 ": "=r" (b) : "r" (m
 535:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 536:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 537:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 538:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 539:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /* Define the interrupt disable/restore macros for each compiler. */
 540:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 541:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #if defined(__GNUC__) || defined(__ICCARM__)
 542:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 543:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** /*** GCC/AC6 and IAR ***/
 544:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __get_interrupt_posture(void)
 546:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int posture;
 548:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 549:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
 550:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
 552:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(posture);
 554:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 555:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 556:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 557:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __set_basepri_value(unsigned int basepri_valu
 558:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 559:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  BASEPRI,%0 ": : "r" (basepri_value));
 560:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 561:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 562:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __enable_interrupts(void)
 563:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 564:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSIE  i": : : "memory");
 565:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 566:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 567:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline void __restore_interrupt(unsigned int int_posture)
 569:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 570:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 571:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __set_basepri_value(int_posture);
 572:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     //__asm__ volatile ("MSR  BASEPRI,%0": : "r" (int_posture): "memory");
 573:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
 575:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 576:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
 577:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 578:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** __attribute__( ( always_inline ) ) static inline unsigned int __disable_interrupts(void)
  57              		.loc 2 578 63 view .LVU13
  58              	.LBB19:
 579:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 580:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** unsigned int int_posture;
  59              		.loc 2 580 1 view .LVU14
 581:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
ARM GAS  /tmp/cc9uBmqC.s 			page 14


 582:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     int_posture = __get_interrupt_posture();
  60              		.loc 2 582 5 view .LVU15
  61              	.LBB20:
  62              	.LBI20:
 545:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
  63              		.loc 2 545 63 view .LVU16
  64              	.LBB21:
 547:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
  65              		.loc 2 547 1 view .LVU17
 551:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
  66              		.loc 2 551 5 view .LVU18
  67              		.syntax unified
  68              	@ 551 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
  69 0004 EFF3108C 		MRS  ip, PRIMASK 
  70              	@ 0 "" 2
  71              	.LVL2:
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
  72              		.loc 2 553 5 view .LVU19
 553:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** }
  73              		.loc 2 553 5 is_stmt 0 view .LVU20
  74              		.thumb
  75              		.syntax unified
  76              	.LBE21:
  77              	.LBE20:
 583:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** 
 584:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #ifdef TX_PORT_USE_BASEPRI
 585:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __set_basepri_value(TX_PORT_BASEPRI);
 586:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #else
 587:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     __asm__ volatile ("CPSID i" : : : "memory");
  78              		.loc 2 587 5 is_stmt 1 view .LVU21
  79              		.syntax unified
  80              	@ 587 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
  81 0008 72B6     		CPSID i
  82              	@ 0 "" 2
 588:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 589:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h ****     return(int_posture);
  83              		.loc 2 589 5 view .LVU22
  84              	.LVL3:
  85              		.loc 2 589 5 is_stmt 0 view .LVU23
  86              		.thumb
  87              		.syntax unified
  88              	.LBE19:
  89              	.LBE18:
 103:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 104:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_QUEUE_ENABLE_PERFORMANCE_INFO
 105:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 106:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Increment the total messages sent counter.  */
 107:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     _tx_queue_performance_messages_sent_count++;
 108:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 109:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Increment the number of messages sent to this queue.  */
 110:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     queue_ptr -> tx_queue_performance_messages_sent_count++;
 111:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 112:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 113:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
 114:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_QUEUE_SEND, queue_ptr, TX_POINTER_TO_ULONG_CONVERT(source_ptr)
 115:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 116:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Log this kernel call.  */
ARM GAS  /tmp/cc9uBmqC.s 			page 15


 117:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     TX_EL_QUEUE_SEND_INSERT
 118:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 119:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Pickup the thread suspension count.  */
 120:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     suspended_count =  queue_ptr -> tx_queue_suspended_count;
  90              		.loc 1 120 5 is_stmt 1 view .LVU24
  91              		.loc 1 120 21 is_stmt 0 view .LVU25
  92 000a C06A     		ldr	r0, [r0, #44]
  93              	.LVL4:
 121:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 122:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Determine if there is room in the queue.  */
 123:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     if (queue_ptr -> tx_queue_available_storage != TX_NO_MESSAGES)
  94              		.loc 1 123 5 is_stmt 1 view .LVU26
  95              		.loc 1 123 19 is_stmt 0 view .LVU27
  96 000c 6369     		ldr	r3, [r4, #20]
  97              		.loc 1 123 8 view .LVU28
  98 000e 002B     		cmp	r3, #0
  99 0010 48D0     		beq	.L2
 124:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 125:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 126:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* There is room for the message in the queue.  */
 127:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 128:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Determine if there are suspended on this queue.  */
 129:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         if (suspended_count == TX_NO_SUSPENSIONS)
 100              		.loc 1 129 9 is_stmt 1 view .LVU29
 101              		.loc 1 129 12 is_stmt 0 view .LVU30
 102 0012 E0B9     		cbnz	r0, .L3
 130:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 131:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 132:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* No suspended threads, simply place the message in the queue.  */
 133:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 134:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Reduce the amount of available storage.  */
 135:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_available_storage--;
 103              		.loc 1 135 13 is_stmt 1 view .LVU31
 104              		.loc 1 135 52 is_stmt 0 view .LVU32
 105 0014 013B     		subs	r3, r3, #1
 106 0016 6361     		str	r3, [r4, #20]
 136:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 137:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increase the enqueued count.  */
 138:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_enqueued++;
 107              		.loc 1 138 13 is_stmt 1 view .LVU33
 108              		.loc 1 138 23 is_stmt 0 view .LVU34
 109 0018 2369     		ldr	r3, [r4, #16]
 110              		.loc 1 138 43 view .LVU35
 111 001a 0133     		adds	r3, r3, #1
 112 001c 2361     		str	r3, [r4, #16]
 139:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 140:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup source and destination pointers.  */
 141:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             source =       TX_VOID_TO_ULONG_POINTER_CONVERT(source_ptr);
 113              		.loc 1 141 13 is_stmt 1 view .LVU36
 114              	.LVL5:
 142:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             destination =  queue_ptr -> tx_queue_write;
 115              		.loc 1 142 13 view .LVU37
 143:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             size =         queue_ptr -> tx_queue_message_size;
 116              		.loc 1 143 13 view .LVU38
 117              		.loc 1 143 18 is_stmt 0 view .LVU39
 118 001e A268     		ldr	r2, [r4, #8]
 119              	.LVL6:
ARM GAS  /tmp/cc9uBmqC.s 			page 16


 144:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 145:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Copy message. Note that the source and destination pointers are
 146:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                incremented by the macro.  */
 147:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_QUEUE_MESSAGE_COPY(source, destination, size)
 120              		.loc 1 147 13 is_stmt 1 view .LVU40
 121              		.loc 1 147 13 is_stmt 0 view .LVU41
 122 0020 636A     		ldr	r3, [r4, #36]
 123              	.LVL7:
 124              		.loc 1 147 13 view .LVU42
 125 0022 51F8045B 		ldr	r5, [r1], #4
 126              	.LVL8:
 127              		.loc 1 147 13 view .LVU43
 128 0026 43F8045B 		str	r5, [r3], #4
 129              	.LVL9:
 130              		.loc 1 147 13 is_stmt 1 view .LVU44
 131 002a 012A     		cmp	r2, #1
 132 002c 04D8     		bhi	.L4
 133 002e 05E0     		b	.L5
 134              	.LVL10:
 135              	.L6:
 136              		.loc 1 147 13 discriminator 3 view .LVU45
 137              		.loc 1 147 13 is_stmt 0 discriminator 3 view .LVU46
 138 0030 51F8045B 		ldr	r5, [r1], #4
 139              	.LVL11:
 140              		.loc 1 147 13 discriminator 3 view .LVU47
 141 0034 43F8045B 		str	r5, [r3], #4
 142              	.LVL12:
 143              	.L4:
 144              		.loc 1 147 13 is_stmt 1 discriminator 2 view .LVU48
 145              		.loc 1 147 13 is_stmt 0 discriminator 2 view .LVU49
 146 0038 013A     		subs	r2, r2, #1
 147              	.LVL13:
 148              		.loc 1 147 13 discriminator 2 view .LVU50
 149 003a F9D1     		bne	.L6
 150              	.L5:
 148:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 149:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Determine if we are at the end.  */
 150:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (destination == queue_ptr -> tx_queue_end)
 151              		.loc 1 150 13 is_stmt 1 view .LVU51
 152              		.loc 1 150 42 is_stmt 0 view .LVU52
 153 003c E269     		ldr	r2, [r4, #28]
 154              	.LVL14:
 155              		.loc 1 150 16 view .LVU53
 156 003e 9A42     		cmp	r2, r3
 157 0040 03D0     		beq	.L19
 158              	.L7:
 151:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 152:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 153:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Yes, wrap around to the beginning.  */
 154:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 destination =  queue_ptr -> tx_queue_start;
 155:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 156:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 157:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Adjust the write pointer.  */
 158:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_write =  destination;
 159              		.loc 1 158 13 is_stmt 1 view .LVU54
 160              		.loc 1 158 41 is_stmt 0 view .LVU55
 161 0042 6362     		str	r3, [r4, #36]
ARM GAS  /tmp/cc9uBmqC.s 			page 17


 159:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 160:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 161:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 162:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup the notify callback routine for this queue.  */
 163:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_send_notify =  queue_ptr -> tx_queue_send_notify;
 164:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 165:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 166:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* No thread suspended, just return to caller.  */
 167:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 168:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 169:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 162              		.loc 1 169 13 is_stmt 1 view .LVU56
 163              	.LVL15:
 164              	.LBB22:
 165              	.LBI22:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 166              		.loc 2 568 55 view .LVU57
 167              	.LBB23:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 168              		.loc 2 574 5 view .LVU58
 169              		.syntax unified
 170              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 171 0044 8CF31088 		MSR  PRIMASK,ip
 172              	@ 0 "" 2
 173              	.LVL16:
 174              		.thumb
 175              		.syntax unified
 176              	.L1:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 177              		.loc 2 574 5 is_stmt 0 view .LVU59
 178              	.LBE23:
 179              	.LBE22:
 170:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 171:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 172:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 173:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Determine if a notify callback is required.  */
 174:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (queue_send_notify != TX_NULL)
 175:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 176:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 177:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Call application queue send notification.  */
 178:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 (queue_send_notify)(queue_ptr);
 179:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 180:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 181:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 182:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         else
 183:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 184:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 185:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* There is a thread suspended on an empty queue. Simply
 186:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                copy the message to the suspended thread's destination
 187:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                pointer.  */
 188:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 189:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup the head of the suspension list.  */
 190:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr =  queue_ptr -> tx_queue_suspension_list;
 191:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 192:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* See if this is the only suspended thread on the list.  */
 193:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             suspended_count--;
 194:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (suspended_count == TX_NO_SUSPENSIONS)
ARM GAS  /tmp/cc9uBmqC.s 			page 18


 195:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 196:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 197:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Yes, the only suspended thread.  */
 198:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 199:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Update the head pointer.  */
 200:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =  TX_NULL;
 201:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 202:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             else
 203:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 204:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 205:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* At least one more thread is on the same expiration list.  */
 206:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 207:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Update the list head pointer.  */
 208:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =  thread_ptr -> tx_thread_suspended_next;
 209:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 210:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Update the links of the adjacent threads.  */
 211:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread =                            thread_ptr -> tx_thread_suspended_next;
 212:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =  next_thread;
 213:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 214:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Update the links of the adjacent threads.  */
 215:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread =                               thread_ptr -> tx_thread_suspended_p
 216:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   previous_thread;
 217:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   next_thread;
 218:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 219:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 220:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Decrement the suspension count.  */
 221:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_suspended_count =  suspended_count;
 222:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 223:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Prepare for resumption of the thread.  */
 224:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 225:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Clear cleanup routine to avoid timeout.  */
 226:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
 227:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 228:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup source and destination pointers.  */
 229:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             source =       TX_VOID_TO_ULONG_POINTER_CONVERT(source_ptr);
 230:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             destination =  TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_additional_susp
 231:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             size =         queue_ptr -> tx_queue_message_size;
 232:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 233:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Copy message. Note that the source and destination pointers are
 234:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                incremented by the macro.  */
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_QUEUE_MESSAGE_COPY(source, destination, size)
 236:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 237:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Put return status into the thread control block.  */
 238:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
 239:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 240:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 241:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 242:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup the notify callback routine for this queue.  */
 243:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_send_notify =  queue_ptr -> tx_queue_send_notify;
 244:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 245:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 246:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_NOT_INTERRUPTABLE
 247:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 248:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Resume the thread!  */
 249:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_system_ni_resume(thread_ptr);
 250:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 251:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
ARM GAS  /tmp/cc9uBmqC.s 			page 19


 252:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 253:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #else
 254:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 255:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Temporarily disable preemption.  */
 256:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_preempt_disable++;
 257:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 258:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 259:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 260:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 261:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Resume thread.  */
 262:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_system_resume(thread_ptr);
 263:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 264:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 265:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 266:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 267:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Determine if a notify callback is required.  */
 268:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (queue_send_notify != TX_NULL)
 269:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 270:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 271:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Call application queue send notification.  */
 272:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 (queue_send_notify)(queue_ptr);
 273:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 274:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 275:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 276:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 277:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 278:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* At this point, the queue is full. Determine if suspension is requested.  */
 279:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     else if (wait_option != TX_NO_WAIT)
 280:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 281:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 282:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Determine if the preempt disable flag is non-zero.  */
 283:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         if (_tx_thread_preempt_disable != ((UINT) 0))
 284:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 285:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 286:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 287:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 288:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 289:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Suspension is not allowed if the preempt disable flag is non-zero at this point - re
 290:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             status =  TX_QUEUE_FULL;
 291:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 292:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         else
 293:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 294:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 295:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Yes, prepare for suspension of this thread.  */
 296:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 297:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_QUEUE_ENABLE_PERFORMANCE_INFO
 298:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 299:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increment the total number of queue full suspensions.  */
 300:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_queue_performance_full_suspension_count++;
 301:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 302:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increment the number of full suspensions on this queue.  */
 303:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_performance_full_suspension_count++;
 304:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 305:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 306:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup thread pointer.  */
 307:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_THREAD_GET_CURRENT(thread_ptr)
 308:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
ARM GAS  /tmp/cc9uBmqC.s 			page 20


 309:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup cleanup routine pointer.  */
 310:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_cleanup =  &(_tx_queue_cleanup);
 311:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 312:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup cleanup information, i.e. this queue control
 313:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                block and the source pointer.  */
 314:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_control_block =    (VOID *) queue_ptr;
 315:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_additional_suspend_info =  (VOID *) source_ptr;
 316:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_option =           TX_FALSE;
 317:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 318:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_NOT_INTERRUPTABLE
 319:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 320:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increment the suspension sequence number, which is used to identify
 321:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                this suspension event.  */
 322:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspension_sequence++;
 323:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 324:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 325:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup suspension list.  */
 326:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (suspended_count == TX_NO_SUSPENSIONS)
 327:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 328:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 329:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* No other threads are suspended.  Setup the head pointer and
 330:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                    just setup this threads pointers to itself.  */
 331:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =         thread_ptr;
 332:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 333:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 334:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 335:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             else
 336:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 337:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 338:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* This list is not NULL, add current thread to the end. */
 339:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread =                                   queue_ptr -> tx_queue_suspension_li
 340:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        next_thread;
 341:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread =                               next_thread -> tx_thread_suspended_
 342:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 343:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   thread_ptr;
 344:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   thread_ptr;
 345:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 346:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 347:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Increment the suspended thread count.  */
 348:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_ptr -> tx_queue_suspended_count =  suspended_count + ((UINT) 1);
 349:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 350:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Set the state to suspended.  */
 351:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_state =    TX_QUEUE_SUSP;
 352:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 353:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 354:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 355:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Pickup the notify callback routine for this queue.  */
 356:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             queue_send_notify =  queue_ptr -> tx_queue_send_notify;
 357:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 358:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 359:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_NOT_INTERRUPTABLE
 360:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 361:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Call actual non-interruptable thread suspension routine.  */
 362:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_system_ni_suspend(thread_ptr, wait_option);
 363:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 364:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 365:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
ARM GAS  /tmp/cc9uBmqC.s 			page 21


 366:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #else
 367:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 368:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Set the suspending flag.  */
 369:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspending =  TX_TRUE;
 370:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 371:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Setup the timeout period.  */
 372:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_timer.tx_timer_internal_remaining_ticks =  wait_option;
 373:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 374:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Temporarily disable preemption.  */
 375:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_preempt_disable++;
 376:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 377:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Restore interrupts.  */
 378:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             TX_RESTORE
 379:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 380:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Call actual thread suspension routine.  */
 381:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             _tx_thread_system_suspend(thread_ptr);
 382:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 383:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 384:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifndef TX_DISABLE_NOTIFY_CALLBACKS
 385:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 386:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Determine if a notify callback is required.  */
 387:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (thread_ptr -> tx_thread_suspend_status == TX_SUCCESS)
 388:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 389:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 390:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 /* Determine if there is a notify callback.  */
 391:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 if (queue_send_notify != TX_NULL)
 392:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 {
 393:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 394:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                     /* Call application queue send notification.  */
 395:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                     (queue_send_notify)(queue_ptr);
 396:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 }
 397:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 398:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 399:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 400:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             /* Return the completion status.  */
 401:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             status =  thread_ptr -> tx_thread_suspend_status;
 402:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 403:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 404:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     else
 405:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 406:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 407:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Otherwise, just return a queue full error message to the caller.  */
 408:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 409:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #ifdef TX_QUEUE_ENABLE_PERFORMANCE_INFO
 410:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 411:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Increment the number of full non-suspensions on this queue.  */
 412:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         queue_ptr -> tx_queue_performance_full_error_count++;
 413:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 414:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Increment the total number of full non-suspensions.  */
 415:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         _tx_queue_performance_full_error_count++;
 416:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 417:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 418:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Restore interrupts.  */
 419:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         TX_RESTORE
 420:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 421:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         /* Return error completion.  */
 422:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         status =  TX_QUEUE_FULL;
ARM GAS  /tmp/cc9uBmqC.s 			page 22


 423:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 424:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 425:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     /* Return completion status.  */
 426:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     return(status);
 427:Middlewares/ST/threadx/common/src/tx_queue_send.c **** }
 180              		.loc 1 427 1 view .LVU60
 181 0048 38BD     		pop	{r3, r4, r5, pc}
 182              	.LVL17:
 183              	.L19:
 154:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 184              		.loc 1 154 17 is_stmt 1 view .LVU61
 154:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 185              		.loc 1 154 29 is_stmt 0 view .LVU62
 186 004a A369     		ldr	r3, [r4, #24]
 187              	.LVL18:
 154:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 188              		.loc 1 154 29 view .LVU63
 189 004c F9E7     		b	.L7
 190              	.LVL19:
 191              	.L3:
 190:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 192              		.loc 1 190 13 is_stmt 1 view .LVU64
 190:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 193              		.loc 1 190 24 is_stmt 0 view .LVU65
 194 004e A56A     		ldr	r5, [r4, #40]
 195              	.LVL20:
 193:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             if (suspended_count == TX_NO_SUSPENSIONS)
 196              		.loc 1 193 13 is_stmt 1 view .LVU66
 194:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 197              		.loc 1 194 13 view .LVU67
 194:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 198              		.loc 1 194 16 is_stmt 0 view .LVU68
 199 0050 0138     		subs	r0, r0, #1
 200              	.LVL21:
 194:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 201              		.loc 1 194 16 view .LVU69
 202 0052 0DD1     		bne	.L9
 200:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 203              		.loc 1 200 17 is_stmt 1 view .LVU70
 200:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 204              		.loc 1 200 55 is_stmt 0 view .LVU71
 205 0054 0023     		movs	r3, #0
 206 0056 A362     		str	r3, [r4, #40]
 207              	.LVL22:
 208              	.L10:
 221:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 209              		.loc 1 221 13 is_stmt 1 view .LVU72
 221:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 210              		.loc 1 221 51 is_stmt 0 view .LVU73
 211 0058 E062     		str	r0, [r4, #44]
 226:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 212              		.loc 1 226 13 is_stmt 1 view .LVU74
 226:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 213              		.loc 1 226 53 is_stmt 0 view .LVU75
 214 005a 0023     		movs	r3, #0
 215 005c AB66     		str	r3, [r5, #104]
 229:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             destination =  TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_additional_susp
ARM GAS  /tmp/cc9uBmqC.s 			page 23


 216              		.loc 1 229 13 is_stmt 1 view .LVU76
 217              	.LVL23:
 230:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             size =         queue_ptr -> tx_queue_message_size;
 218              		.loc 1 230 13 view .LVU77
 231:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 219              		.loc 1 231 13 view .LVU78
 231:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 220              		.loc 1 231 18 is_stmt 0 view .LVU79
 221 005e A268     		ldr	r2, [r4, #8]
 222              	.LVL24:
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 223              		.loc 1 235 13 is_stmt 1 view .LVU80
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 224              		.loc 1 235 13 is_stmt 0 view .LVU81
 225 0060 EB6F     		ldr	r3, [r5, #124]
 226              	.LVL25:
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 227              		.loc 1 235 13 view .LVU82
 228 0062 51F8040B 		ldr	r0, [r1], #4
 229              	.LVL26:
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 230              		.loc 1 235 13 view .LVU83
 231 0066 43F8040B 		str	r0, [r3], #4
 232              	.LVL27:
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 233              		.loc 1 235 13 is_stmt 1 view .LVU84
 234 006a 012A     		cmp	r2, #1
 235 006c 0AD8     		bhi	.L11
 236 006e 0BE0     		b	.L12
 237              	.LVL28:
 238              	.L9:
 208:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 239              		.loc 1 208 17 view .LVU85
 208:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 240              		.loc 1 208 69 is_stmt 0 view .LVU86
 241 0070 2B6F     		ldr	r3, [r5, #112]
 208:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 242              		.loc 1 208 55 view .LVU87
 243 0072 A362     		str	r3, [r4, #40]
 211:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 queue_ptr -> tx_queue_suspension_list =  next_thread;
 244              		.loc 1 211 17 is_stmt 1 view .LVU88
 245              	.LVL29:
 212:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 246              		.loc 1 212 17 view .LVU89
 215:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   previous_thread;
 247              		.loc 1 215 17 view .LVU90
 215:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   previous_thread;
 248              		.loc 1 215 33 is_stmt 0 view .LVU91
 249 0074 6A6F     		ldr	r2, [r5, #116]
 250              	.LVL30:
 216:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   next_thread;
 251              		.loc 1 216 17 is_stmt 1 view .LVU92
 216:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   next_thread;
 252              		.loc 1 216 61 is_stmt 0 view .LVU93
 253 0076 5A67     		str	r2, [r3, #116]
 217:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 254              		.loc 1 217 17 is_stmt 1 view .LVU94
ARM GAS  /tmp/cc9uBmqC.s 			page 24


 217:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 255              		.loc 1 217 61 is_stmt 0 view .LVU95
 256 0078 1367     		str	r3, [r2, #112]
 257 007a EDE7     		b	.L10
 258              	.LVL31:
 259              	.L13:
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 260              		.loc 1 235 13 is_stmt 1 discriminator 3 view .LVU96
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 261              		.loc 1 235 13 is_stmt 0 discriminator 3 view .LVU97
 262 007c 51F8044B 		ldr	r4, [r1], #4
 263              	.LVL32:
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 264              		.loc 1 235 13 discriminator 3 view .LVU98
 265 0080 43F8044B 		str	r4, [r3], #4
 266              	.LVL33:
 267              	.L11:
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 268              		.loc 1 235 13 is_stmt 1 discriminator 2 view .LVU99
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 269              		.loc 1 235 13 is_stmt 0 discriminator 2 view .LVU100
 270 0084 013A     		subs	r2, r2, #1
 271              	.LVL34:
 235:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 272              		.loc 1 235 13 discriminator 2 view .LVU101
 273 0086 F9D1     		bne	.L13
 274              	.L12:
 238:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 275              		.loc 1 238 13 is_stmt 1 view .LVU102
 238:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 276              		.loc 1 238 52 is_stmt 0 view .LVU103
 277 0088 0024     		movs	r4, #0
 278 008a C5F88440 		str	r4, [r5, #132]
 256:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 279              		.loc 1 256 13 is_stmt 1 view .LVU104
 256:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 280              		.loc 1 256 39 is_stmt 0 view .LVU105
 281 008e 224A     		ldr	r2, .L21
 282              	.LVL35:
 256:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 283              		.loc 1 256 39 view .LVU106
 284 0090 1368     		ldr	r3, [r2]
 285              	.LVL36:
 256:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 286              		.loc 1 256 39 view .LVU107
 287 0092 0133     		adds	r3, r3, #1
 288 0094 1360     		str	r3, [r2]
 259:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 289              		.loc 1 259 13 is_stmt 1 view .LVU108
 290              	.LVL37:
 291              	.LBB24:
 292              	.LBI24:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 293              		.loc 2 568 55 view .LVU109
 294              	.LBB25:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 295              		.loc 2 574 5 view .LVU110
ARM GAS  /tmp/cc9uBmqC.s 			page 25


 296              		.syntax unified
 297              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 298 0096 8CF31088 		MSR  PRIMASK,ip
 299              	@ 0 "" 2
 300              	.LVL38:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 301              		.loc 2 574 5 is_stmt 0 view .LVU111
 302              		.thumb
 303              		.syntax unified
 304              	.LBE25:
 305              	.LBE24:
 262:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 306              		.loc 1 262 13 is_stmt 1 view .LVU112
 307 009a 2846     		mov	r0, r5
 308 009c FFF7FEFF 		bl	_tx_thread_system_resume
 309              	.LVL39:
  99:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 310              		.loc 1 99 12 is_stmt 0 view .LVU113
 311 00a0 2046     		mov	r0, r4
 312 00a2 D1E7     		b	.L1
 313              	.LVL40:
 314              	.L2:
 279:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 315              		.loc 1 279 10 is_stmt 1 view .LVU114
 279:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     {
 316              		.loc 1 279 13 is_stmt 0 view .LVU115
 317 00a4 002A     		cmp	r2, #0
 318 00a6 32D0     		beq	.L14
 283:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 319              		.loc 1 283 9 is_stmt 1 view .LVU116
 283:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 320              		.loc 1 283 40 is_stmt 0 view .LVU117
 321 00a8 1B4B     		ldr	r3, .L21
 322 00aa 1B68     		ldr	r3, [r3]
 283:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         {
 323              		.loc 1 283 12 view .LVU118
 324 00ac 23BB     		cbnz	r3, .L20
 307:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 325              		.loc 1 307 13 is_stmt 1 view .LVU119
 326 00ae 1B4B     		ldr	r3, .L21+4
 327 00b0 1D68     		ldr	r5, [r3]
 328              	.LVL41:
 310:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 329              		.loc 1 310 13 view .LVU120
 310:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 330              		.loc 1 310 53 is_stmt 0 view .LVU121
 331 00b2 1B4B     		ldr	r3, .L21+8
 332 00b4 AB66     		str	r3, [r5, #104]
 314:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_additional_suspend_info =  (VOID *) source_ptr;
 333              		.loc 1 314 13 is_stmt 1 view .LVU122
 314:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_additional_suspend_info =  (VOID *) source_ptr;
 334              		.loc 1 314 59 is_stmt 0 view .LVU123
 335 00b6 EC66     		str	r4, [r5, #108]
 315:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_option =           TX_FALSE;
 336              		.loc 1 315 13 is_stmt 1 view .LVU124
 315:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             thread_ptr -> tx_thread_suspend_option =           TX_FALSE;
 337              		.loc 1 315 61 is_stmt 0 view .LVU125
ARM GAS  /tmp/cc9uBmqC.s 			page 26


 338 00b8 E967     		str	r1, [r5, #124]
 316:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 339              		.loc 1 316 13 is_stmt 1 view .LVU126
 316:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 340              		.loc 1 316 52 is_stmt 0 view .LVU127
 341 00ba 0023     		movs	r3, #0
 342 00bc C5F88030 		str	r3, [r5, #128]
 322:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 343              		.loc 1 322 13 is_stmt 1 view .LVU128
 322:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 344              		.loc 1 322 24 is_stmt 0 view .LVU129
 345 00c0 D5F8AC30 		ldr	r3, [r5, #172]
 322:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 346              		.loc 1 322 56 view .LVU130
 347 00c4 0133     		adds	r3, r3, #1
 348 00c6 C5F8AC30 		str	r3, [r5, #172]
 326:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 349              		.loc 1 326 13 is_stmt 1 view .LVU131
 326:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             {
 350              		.loc 1 326 16 is_stmt 0 view .LVU132
 351 00ca C8B9     		cbnz	r0, .L16
 331:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 352              		.loc 1 331 17 is_stmt 1 view .LVU133
 331:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        thread_ptr;
 353              		.loc 1 331 55 is_stmt 0 view .LVU134
 354 00cc A562     		str	r5, [r4, #40]
 332:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 355              		.loc 1 332 17 is_stmt 1 view .LVU135
 332:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
 356              		.loc 1 332 56 is_stmt 0 view .LVU136
 357 00ce 2D67     		str	r5, [r5, #112]
 333:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 358              		.loc 1 333 17 is_stmt 1 view .LVU137
 333:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 359              		.loc 1 333 60 is_stmt 0 view .LVU138
 360 00d0 6D67     		str	r5, [r5, #116]
 361              	.LVL42:
 362              	.L17:
 348:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 363              		.loc 1 348 13 is_stmt 1 view .LVU139
 348:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 364              		.loc 1 348 70 is_stmt 0 view .LVU140
 365 00d2 0130     		adds	r0, r0, #1
 366              	.LVL43:
 348:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 367              		.loc 1 348 51 view .LVU141
 368 00d4 E062     		str	r0, [r4, #44]
 351:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 369              		.loc 1 351 13 is_stmt 1 view .LVU142
 351:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 370              		.loc 1 351 43 is_stmt 0 view .LVU143
 371 00d6 0523     		movs	r3, #5
 372 00d8 2B63     		str	r3, [r5, #48]
 369:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 373              		.loc 1 369 13 is_stmt 1 view .LVU144
 369:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 374              		.loc 1 369 48 is_stmt 0 view .LVU145
ARM GAS  /tmp/cc9uBmqC.s 			page 27


 375 00da 0123     		movs	r3, #1
 376 00dc AB63     		str	r3, [r5, #56]
 372:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 377              		.loc 1 372 13 is_stmt 1 view .LVU146
 372:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 378              		.loc 1 372 77 is_stmt 0 view .LVU147
 379 00de EA64     		str	r2, [r5, #76]
 375:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 380              		.loc 1 375 13 is_stmt 1 view .LVU148
 375:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 381              		.loc 1 375 39 is_stmt 0 view .LVU149
 382 00e0 0D4A     		ldr	r2, .L21
 383              	.LVL44:
 375:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 384              		.loc 1 375 39 view .LVU150
 385 00e2 1368     		ldr	r3, [r2]
 386 00e4 0133     		adds	r3, r3, #1
 387 00e6 1360     		str	r3, [r2]
 378:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 388              		.loc 1 378 13 is_stmt 1 view .LVU151
 389              	.LVL45:
 390              	.LBB26:
 391              	.LBI26:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 392              		.loc 2 568 55 view .LVU152
 393              	.LBB27:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 394              		.loc 2 574 5 view .LVU153
 395              		.syntax unified
 396              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 397 00e8 8CF31088 		MSR  PRIMASK,ip
 398              	@ 0 "" 2
 399              	.LVL46:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 400              		.loc 2 574 5 is_stmt 0 view .LVU154
 401              		.thumb
 402              		.syntax unified
 403              	.LBE27:
 404              	.LBE26:
 381:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 405              		.loc 1 381 13 is_stmt 1 view .LVU155
 406 00ec 2846     		mov	r0, r5
 407              	.LVL47:
 381:Middlewares/ST/threadx/common/src/tx_queue_send.c **** #endif
 408              		.loc 1 381 13 is_stmt 0 view .LVU156
 409 00ee FFF7FEFF 		bl	_tx_thread_system_suspend
 410              	.LVL48:
 401:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 411              		.loc 1 401 13 is_stmt 1 view .LVU157
 401:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 412              		.loc 1 401 20 is_stmt 0 view .LVU158
 413 00f2 D5F88400 		ldr	r0, [r5, #132]
 414              	.LVL49:
 401:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 415              		.loc 1 401 20 view .LVU159
 416 00f6 A7E7     		b	.L1
 417              	.LVL50:
ARM GAS  /tmp/cc9uBmqC.s 			page 28


 418              	.L20:
 287:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 419              		.loc 1 287 13 is_stmt 1 view .LVU160
 420              	.LBB28:
 421              	.LBI28:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 422              		.loc 2 568 55 view .LVU161
 423              	.LBB29:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 424              		.loc 2 574 5 view .LVU162
 425              		.syntax unified
 426              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 427 00f8 8CF31088 		MSR  PRIMASK,ip
 428              	@ 0 "" 2
 429              	.LVL51:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 430              		.loc 2 574 5 is_stmt 0 view .LVU163
 431              		.thumb
 432              		.syntax unified
 433              	.LBE29:
 434              	.LBE28:
 290:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 435              		.loc 1 290 13 is_stmt 1 view .LVU164
 290:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 436              		.loc 1 290 20 is_stmt 0 view .LVU165
 437 00fc 0B20     		movs	r0, #11
 438              	.LVL52:
 290:Middlewares/ST/threadx/common/src/tx_queue_send.c ****         }
 439              		.loc 1 290 20 view .LVU166
 440 00fe A3E7     		b	.L1
 441              	.LVL53:
 442              	.L16:
 339:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        next_thread;
 443              		.loc 1 339 17 is_stmt 1 view .LVU167
 339:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_next =        next_thread;
 444              		.loc 1 339 29 is_stmt 0 view .LVU168
 445 0100 A36A     		ldr	r3, [r4, #40]
 446              	.LVL54:
 340:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread =                               next_thread -> tx_thread_suspended_
 447              		.loc 1 340 17 is_stmt 1 view .LVU169
 340:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread =                               next_thread -> tx_thread_suspended_
 448              		.loc 1 340 56 is_stmt 0 view .LVU170
 449 0102 2B67     		str	r3, [r5, #112]
 341:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 450              		.loc 1 341 17 is_stmt 1 view .LVU171
 341:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 thread_ptr -> tx_thread_suspended_previous =    previous_thread;
 451              		.loc 1 341 33 is_stmt 0 view .LVU172
 452 0104 596F     		ldr	r1, [r3, #116]
 453              	.LVL55:
 342:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   thread_ptr;
 454              		.loc 1 342 17 is_stmt 1 view .LVU173
 342:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 previous_thread -> tx_thread_suspended_next =   thread_ptr;
 455              		.loc 1 342 60 is_stmt 0 view .LVU174
 456 0106 6967     		str	r1, [r5, #116]
 343:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   thread_ptr;
 457              		.loc 1 343 17 is_stmt 1 view .LVU175
 343:Middlewares/ST/threadx/common/src/tx_queue_send.c ****                 next_thread -> tx_thread_suspended_previous =   thread_ptr;
ARM GAS  /tmp/cc9uBmqC.s 			page 29


 458              		.loc 1 343 61 is_stmt 0 view .LVU176
 459 0108 0D67     		str	r5, [r1, #112]
 460              	.LVL56:
 344:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 461              		.loc 1 344 17 is_stmt 1 view .LVU177
 344:Middlewares/ST/threadx/common/src/tx_queue_send.c ****             }
 462              		.loc 1 344 61 is_stmt 0 view .LVU178
 463 010a 5D67     		str	r5, [r3, #116]
 464 010c E1E7     		b	.L17
 465              	.LVL57:
 466              	.L14:
 419:Middlewares/ST/threadx/common/src/tx_queue_send.c **** 
 467              		.loc 1 419 9 is_stmt 1 view .LVU179
 468              	.LBB30:
 469              	.LBI30:
 568:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** {
 470              		.loc 2 568 55 view .LVU180
 471              	.LBB31:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 472              		.loc 2 574 5 view .LVU181
 473              		.syntax unified
 474              	@ 574 "Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h" 1
 475 010e 8CF31088 		MSR  PRIMASK,ip
 476              	@ 0 "" 2
 477              	.LVL58:
 574:Middlewares/ST/threadx/ports/cortex_m7/gnu/inc/tx_port.h **** #endif
 478              		.loc 2 574 5 is_stmt 0 view .LVU182
 479              		.thumb
 480              		.syntax unified
 481              	.LBE31:
 482              	.LBE30:
 422:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 483              		.loc 1 422 9 is_stmt 1 view .LVU183
 422:Middlewares/ST/threadx/common/src/tx_queue_send.c ****     }
 484              		.loc 1 422 16 is_stmt 0 view .LVU184
 485 0112 0B20     		movs	r0, #11
 486              	.LVL59:
 426:Middlewares/ST/threadx/common/src/tx_queue_send.c **** }
 487              		.loc 1 426 5 is_stmt 1 view .LVU185
 426:Middlewares/ST/threadx/common/src/tx_queue_send.c **** }
 488              		.loc 1 426 11 is_stmt 0 view .LVU186
 489 0114 98E7     		b	.L1
 490              	.L22:
 491 0116 00BF     		.align	2
 492              	.L21:
 493 0118 00000000 		.word	_tx_thread_preempt_disable
 494 011c 00000000 		.word	_tx_thread_current_ptr
 495 0120 00000000 		.word	_tx_queue_cleanup
 496              		.cfi_endproc
 497              	.LFE8:
 499              		.text
 500              	.Letext0:
 501              		.file 3 "Middlewares/ST/threadx/common/inc/tx_api.h"
 502              		.file 4 "Middlewares/ST/threadx/common/inc/tx_thread.h"
 503              		.file 5 "Middlewares/ST/threadx/common/inc/tx_queue.h"
ARM GAS  /tmp/cc9uBmqC.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 tx_queue_send.c
     /tmp/cc9uBmqC.s:20     .text._tx_queue_send:00000000 $t
     /tmp/cc9uBmqC.s:26     .text._tx_queue_send:00000000 _tx_queue_send
     /tmp/cc9uBmqC.s:493    .text._tx_queue_send:00000118 $d

UNDEFINED SYMBOLS
_tx_thread_system_resume
_tx_thread_system_suspend
_tx_thread_preempt_disable
_tx_thread_current_ptr
_tx_queue_cleanup
